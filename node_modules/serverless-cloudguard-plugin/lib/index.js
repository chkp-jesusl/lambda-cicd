"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var t=e(require("lodash")),i=e(require("chalk"));const n=require("path"),r=require("child_process"),o=require("fs"),s=require("os"),a=require("lodash"),u=require("is-path-inside"),c=require("is-installed-globally");function l(e){return n.join(e,".protego",".udocker")}function p(){return"string"==typeof process.env.__PROTEGO_INSTALL_DIR&&o.existsSync(process.env.__PROTEGO_INSTALL_DIR)?l(process.env.__PROTEGO_INSTALL_DIR):null}function d(){const e=p();return null!==e?e:c||u(__dirname,"/usr/local/")?l(s.homedir()):n.join(__dirname,"..",".udocker")}function h(){return n.join(__dirname,"..","third-party","udocker")}function g(){let e={UDOCKER_LOGLEVEL:m(),UDOCKER_DIR:d(),UDOCKER_TARBALL:n.join(h(),"udocker-1.1.4a.tar.gz")};return a.merge(e,process.env)}function f(){return n.join(h(),"udocker")}function _(){return n.join(d(),"bin","udocker")}function m(){const e=process.env.__PROTEGO_UDOCKER_LOGLEVEL;return"string"!=typeof e?2:"debug"===e.toLowerCase()?5:"info"===e.toLowerCase()?3:2}var P={getUdockerDestination:_,installUdocker:function(e,t){try{if(o.existsSync(_()))return;t.log("Please wait while third-party dependencies are installed..."),r.execSync(function(e){return[f(),...e,"install","--force"].join(" ")}(e),{env:g()}),o.copyFileSync(f(),_()),t.log("Installation complete.")}catch(e){t.error(`Failed to install third-party dependencies with error: ${e}`),process.exit(1)}},getUdockerOptions:function(e){const t={UDOCKER_LOGLEVEL:m()};let i={env:a.merge(t,process.env)};i.env.UDOCKER_TARBALL=n.join(h(),"udocker-1.1.4a.tar.gz");const r=p();return null===r?(e.debug("Container options empty"),i):(e.debug(`Returing container option: UDOCKER_DIR: ${r}`),i.env.UDOCKER_DIR=r,i.env.UDOCKER_KEYSTORE=n.join(r,"keystore"),i)}};const E=require("lodash"),F=require("path"),v=require("upath"),S=require("fs"),y=require("fs-extra"),A=require("crypto"),T=require("child_process"),O=require("os"),C=require("is-path-inside"),R=require("is-installed-globally"),b=require("is-windows"),w=require("chalk");class I extends Error{constructor(e){super(e),this.__proto__=new.target.prototype}toString(){return this.message}}class N extends Error{constructor(e){super(e),this.__proto__=new.target.prototype}}class D extends I{constructor(e,t,i){super(e),this._data=i,this._code=t,this.__proto__=new.target.prototype}get data(){return this._data}get code(){return this._code}}class L extends I{constructor(e,t){super(t&&E.isFunction(t.toString)?t.toString():E.get(e,"statusMessage","HttpError")),Object.assign(this,e),this.__proto__=new.target.prototype}}function k(e,t,i=1){return Promise.resolve().then(e).catch(n=>{if(i>0)return t.debug(n),t.debug(`Retrying ... (Remains retries: ${i})]`),k(e,t,i-1);throw n})}function U(e,t=[],i={},n=!1){const r=E.map(t,e=>(""+e).replace(/(AWS_ACCESS_KEY_ID=|AWS_SECRET_ACCESS_KEY=|AWS_SESSION_TOKEN=)(.*)/gi,(e,t,i)=>`${t}******`)),o=V(i,2,["AWS_ACCESS_KEY_ID","AWS_SECRET_ACCESS_KEY","AWS_SESSION_TOKEN"]);return this.trace(`${e} ${r.join(" ")} | options: ${JSON.stringify(o)} | quiet=${n}`),new Promise((r,o)=>{const s=T.spawn(e,t,i);let a="",u="";s.stdout.on("data",e=>{!n&&this.stdoutWrite(e),a=e}),s.stderr.on("data",e=>{!n&&this.stdoutWrite(e,!0),u=e}),s.on("error",e=>{this.debug(`child process ERROR with code: ${e.code}`),o(new D(e.message,e.code||e.errno,e))}),s.on("close",e=>{this.debug(`child process exited with code ${e}`),0===e?r(e):o(new D(u||`process exited with code ${e}`,e,a+"\n"+u))})})}function $(e){if("win32"===process.platform){const t=(e,t,i)=>`/${t.toLowerCase()}/`;return v.toUnix(e).replace(/^([a-zA-Z]+)(:\/)/,t)}return e}function j(){return!E.isEmpty(process.env.PROTEGO_PLUGIN_IN_AWS_LAMBDA)}function x(e,t){return void 0===e?(t.debug("config not provide, use docker by default"),!1):"string"==typeof e.containerCmd&&e.containerCmd.includes("udocker")?(t.debug("containerCmd is set to udocker"),!0):void 0!==e.useDocker&&!1===e.useDocker?(t.debug("useDocker is set to false"),!0):!1===e.docker&&(t.debug("docker is set to false"),!0)}function q(e,t){return"string"==typeof e.containerCmd?(t.debug(`Container cmd: ${e.containerCmd}`),e.containerCmd):x(e,t)?(t.debug("Container cmd: udocker"),function(e){const t=P.getUdockerDestination();if(S.existsSync(t))return e.debug(`Returning installed udocker location: ${t}`),t;const i=B({useDocker:!1},e);return e.debug("Installing udocker..."),P.installUdocker(i,e),t}(t)):(t.debug("Container cmd: docker"),"docker")}function M(e){return P.getUdockerOptions(e)}function G(e,t){return b()?(t.debug("No user required on Windows platform"),[]):x(e,t)?(t.debug("No user required for udocker"),[]):(t.debug(`Returning docker user: ${process.geteuid()}:${process.getgid()}`),["--user",`${process.geteuid()}:${process.getgid()}`])}function B(e,t){return x(e,t)?process.getuid&&0===process.getuid()?(t.debug("Allow root user on udocker"),["--allow-root"]):(t.debug("No args required for non-root user for udocker"),[]):(t.debug("No args required for docker"),[])}function V(e,t=0,i=null){if(E.isString(e))return e.slice(0,t)+"**********";if(E.isArray(e))return E.map(e,e=>V(e,t,i));if(E.isObject(e)){const n={};return E.each(e,(e,r)=>n[r]=null!==i&&E.isString(e)&&!E.includes(i,r)?e:V(e,t,i)),n}return e}function H(e){const t=["protego","cloudguard"];try{const e=process.argv[1],i=F.basename(e,".js");return t.includes(i)?i:t[0]}catch(i){return e.log(`getPluginType: Failed to find plugin type, returning: ${t[0]}`),t[0]}}function W(e){return"protego"===e}function J(e,t,i){let n="\n";return n+=w.yellow.bold("\n======================================================\n"),n+=`${w.yellow.bold("|               ")}${w.yellow.underline.bold("DEPRECATION WARNING!!!")}${w.yellow.bold("               |\n")}`,n+=w.yellow.bold("======================================================\n"),n+=`${w.yellow.bold("WARN: ")}${w.yellow.underline.bold(e)}${w.yellow(" "+i+" will be deprecated in coming releases.\n")}`,n+=`${w.yellow("Use ")}${w.green.underline.bold(t)}${w.yellow(" "+i+" instead.\n")}`,n+=`${w.yellow("Please refer to the product documentation for more details.\n")}`,n}var K={VERSION:"latest",PROVIDER_AWS:"aws",PROVIDER_AZURE:"azure",IN_LAMBDA_MODE:j(),NODE_FSP_TGZ:"protego-fsp-nodejs-latest.tgz",PYTHON_FSP_ZIP:"protego-fsp-python2-latest.zip",JAVA_FSP_JAR:"protego-fsp-java-latest-injector.jar",CSHARP_FSP_ZIP:"protego-fsp-csharp-latest.zip",REST_API_HTTP_PROTOCOL:"https://",REST_API_FUNCTIONS:"functions/",REST_API_ACCOUNTS:"accounts/",REST_API_PROTEGO_URL_PART:".execute-api.us-east-1.amazonaws.com/",REST_API_PROTEGO_PATH:"/protego/api/accounts/",REST_API_PROTEGO_AUTH_KEY:"x-api-key",REST_API_PROTEGO_FSP_BUNDLE:"fsp_bundle",REST_API_PROTEGO_PROACT_BUNDLE:"proact_bundle",REST_API_PROTEGO_EXPLORE_ACCOUNT:"dev_explore_account",REST_API_DOME9_HOST:"api.dome9.com/v2",REST_API_DOME9_BASE_PATH:"/serverless/",REST_API_DOME9_AUTH_KEY:"Authorization",REST_API_DOME9_AUTH_TYPE:"Basic",REST_API_DOME9_FSP_BUNDLE:"fspBundle",REST_API_DOME9_PROACT_BUNDLE:"proactBundle",REST_API_DOME9_EXPLORE_ACCOUNT:"devExploreAccount",CACHE_FOLDER:".cache",FSP_RES_FOLDER:".cache/fsp",FUNCTION_PROACT_RES_FOLDER:".cache/proact",NODE_PACKAGE_NAME:"@protego/protego-node-agent",NODE_PACKAGE_FOLDER:"@protego",NODE_FOLDER:"nodejs",PYTHON_FOLDER:"python",PYTHON_PACKAGE:"protego_fsp",FLAT_CACHE:".cache/.config",ROOT_FOLDER:j()?F.join(O.tmpdir(),".protego"):R||C(__dirname,"/usr/local/")?F.join(O.homedir(),".protego"):F.join(__dirname,"../"),FSP_TEMP_FOLDER:"fsp-temp",CSHARP_LAYER_SUPPORTED_VERSION:"1.4.7",FTP_INSTRUMENTS_ACTIONS:{add:"add",remove:"remove"},MAX_ADD_CODE_SIZE:46e6,MAX_REMOVE_SIZE:5e7,PLUGIN_TYPE_KEY:"pluginTypeConfig",CLOUDGUARD_FUNCTION_FOLDER_NAME:"Cloudguard",CLOUDGUARD_CONFIG_FILE_NAME:"cloudguard-fsp-config.json",CLOUDGUARD_REPORT_ENDPOINT_VALUE:"__CLOUDGUARD_FSP_REPORT_ENDPOINT_VALUE__",CLOUDGUARD_POLICY_ENDPOINT_VALUE:"__CLOUDGUARD_FSP_POLICY_ENDPOINT_VALUE__",CLOUDGUARD_CORE_LIB_FOLDER:"libs",CLOUDGUARD_CONFIG_RUNTIME:"runtime",CLOUDGUARD_AZURE_FUNCTION_METADATA_FILE:"function.json",CLOUDGUARD_AZURE_SCRIPT_FILE_NAME:"scriptFile",CLOUDGUARD_AZURE_DEFAULT_SCRIPT_FILE:"index.js",CLOUDGUARD_AZURE_FSP_REQUIRE_STATEMENT:'try{require("../Cloudguard/protego")}catch(e){}'};const z=require("lodash"),Y={UnexpectedError:{id:100},InitializationFailedError:{message:"Initialization Failed, show --help",id:101},InvalidConfigurationError:{message:"Invalid Configuration, show --help",id:102},ParsingError:{id:103},CFTemplateError:{id:104},DockerError:{id:105},FspAlreadyExistError:{message:"FSP Already Exist",id:130},FspDoesNotExistError:{message:"FSP Does Not Exist",id:131},FspCodeInstrumentationError:{message:"FSP Code Instrumentation Error",id:132},FspRemoveUnsupportedVersionError:{id:133},FspRemovalError:{id:134},FspCodeInstrumentationMissingHandlerError:{id:135},FspInstrumentationError:{id:136,message:"Fsp Instrumentation Error: Something went wrong, please verify the configuration."},FspUnsupportedRuntimeError:{id:137},FspUpdateCodeEntityTooLargeError:{id:138},FspCodeSizeIsTooLargeError:{id:139}};class ProtegoBaseErrorException extends I{constructor(e,t=null){super(),this.name=this.constructor.name,this.message=e||z.get(Y,`${this.name}.message`,z.startCase(this.name)),this._id=z.get(Y,`${this.name}.id`,99),Error.captureStackTrace(this,this.constructor),t instanceof Error&&(this.message+=`\n - ${t.message}`,z.isEmpty(this.stack)||(this.stack+=`\n Nested Stack:\n  ${t.stack}`))}get id(){return this._id}toString(){const e=this.message.includes(this.name)?"":this.message;return`${this.name} (#${this.id}): ${e}`}}class FspAlreadyExistError extends ProtegoBaseErrorException{}class FspDoesNotExistError extends ProtegoBaseErrorException{}class FspCodeInstrumentationError extends ProtegoBaseErrorException{}class FspCodeInstrumentationMissingHandlerError extends ProtegoBaseErrorException{}class FspRemoveUnsupportedVersionError extends ProtegoBaseErrorException{}class FspRemovalError extends ProtegoBaseErrorException{}class FspUnsupportedActionError extends ProtegoBaseErrorException{}class FspInstrumentationError extends ProtegoBaseErrorException{}class FspUpdateCodeEntityTooLargeError extends ProtegoBaseErrorException{}class FspCodeSizeIsTooLargeError extends ProtegoBaseErrorException{}class InitializationFailedError extends ProtegoBaseErrorException{}class InvalidConfigurationError extends ProtegoBaseErrorException{}class UnexpectedError extends ProtegoBaseErrorException{}class ParsingError extends ProtegoBaseErrorException{}class CFTemplateError extends ProtegoBaseErrorException{}class DockerError extends ProtegoBaseErrorException{}class Z{constructor(e,t={},i){this.logger=e,this._loggerOptions=t,this.log_tag=t.log_tag||`${i}`,this.is_quiet=!0===t.quiet,this._logLevel=!0===t.debug?Z.LEVEL_DEBUG:Z.LEVEL_WARNING,"true"!==process.env.__PROTEGO_DEBUG&&"DEBUG"!==process.env.PROTEGO_LOG_LEVEL||(this._logLevel=Z.LEVEL_TRACE)}get logLevel(){return this._logLevel}set logLevel(e){this._logLevel=e}get isTraceLevel(){return this._logLevel<=Z.LEVEL_TRACE}get isDebugLevel(){return this._logLevel<=Z.LEVEL_DEBUG}get loggerOptions(){return{log_tag:this.log_tag,quiet:this.is_quiet,debug:this._logLevel<=Z.LEVEL_DEBUG,trace:this._logLevel<=Z.LEVEL_TRACE}}cleanLog(e){!this.is_quiet&&this.logger.log(e)}log(e,...t){!this.is_quiet&&this.logger.log(`[${this.log_tag}] ${e} ${t.join(" ")}`)}debug(e,...i){!this.is_quiet&&this.logLevel<=Z.LEVEL_DEBUG&&this.logger.log(`[${this.log_tag}] | DEBUG | ${e} ${t.map(i,e=>t.isObject(e)?JSON.stringify(e,null,2):e).join(" ")}`)}trace(e,...i){!this.is_quiet&&this.logLevel<=Z.LEVEL_TRACE&&this.logger.log(`[${this.log_tag}] | TRACE | ${e} ${t.map(i,e=>t.isObject(e)?JSON.stringify(e,null,2):e).join(" ")}`)}warn(e){const t=e instanceof Error?e.message:"string"==typeof e?e:JSON.stringify(e||"");!this.is_quiet&&this.logger.log(`[${this.log_tag}] |  WARN  | ${i.yellow.bold(t)}`)}stdoutWrite(e,t=!1){!this.is_quiet&&process.stdout.write(`${t?"["+this.log_tag+"] ":""}${e}`)}error(e){if(e instanceof I)throw e;const t=e instanceof Error?e.message:"string"==typeof e?e:JSON.stringify(e||"");throw!this.is_quiet&&this.logLevel<=Z.LEVEL_DEBUG&&this.logger.log(`[${this.log_tag}] | ERROR |  ${t}`),new I(`[${this.log_tag}] | ERROR | ${t}`)}}Z.LEVEL_TRACE=0,Z.LEVEL_DEBUG=1,Z.LEVEL_WARNING=2;class X{constructor(e,t,i,n,r,o,s={}){this._awsAccountId=e,this._protegoApiToken=t,this._protegoEndpoint=i,this._protegoApiId=n,this._protegoEndpointStage=r,this._baseUrl=o,this._options=s}shouldCallProtegoApi(){return this._protegoApiToken.indexOf(":")<0}getBaseUrl(){return this._baseUrl?this._baseUrl:this.shouldCallProtegoApi()?`${K.REST_API_HTTP_PROTOCOL}${this._protegoApiId}${K.REST_API_PROTEGO_URL_PART}${this._protegoEndpointStage}`:`${K.REST_API_HTTP_PROTOCOL}${K.REST_API_DOME9_HOST}`}protegoUrl(e){return`${this._protegoEndpoint?this._protegoEndpoint:this.getBaseUrl()}${K.REST_API_PROTEGO_PATH}${this._awsAccountId}/${e}`}dome9Url(e){const t=`${this.getBaseUrl()}${K.REST_API_DOME9_BASE_PATH}`;return e.indexOf(K.REST_API_FUNCTIONS)<0?`${t}${K.REST_API_ACCOUNTS}${this._awsAccountId}/${e}`:`${t}${e}`}get fspBundleApi(){return this.shouldCallProtegoApi()?this.protegoUrl(K.REST_API_PROTEGO_FSP_BUNDLE):this.dome9Url(K.REST_API_DOME9_FSP_BUNDLE)}get proactBundleApi(){return this.shouldCallProtegoApi()?this.protegoUrl(K.REST_API_PROTEGO_PROACT_BUNDLE):this.dome9Url(K.REST_API_DOME9_PROACT_BUNDLE)}exploreAccountApi(e){if(this.shouldCallProtegoApi()){const t=void 0===e?K.REST_API_PROTEGO_EXPLORE_ACCOUNT:`${K.REST_API_FUNCTIONS}${e}/${K.REST_API_PROTEGO_EXPLORE_ACCOUNT}`;return this.protegoUrl(t)}const t=void 0===e?K.REST_API_DOME9_EXPLORE_ACCOUNT:`${K.REST_API_FUNCTIONS}${e}/${K.REST_API_DOME9_EXPLORE_ACCOUNT}`;return this.dome9Url(t)}commonOptions(){return{extract:!1,headers:Object.assign({},this._options.headers||{}),query:this._options.query||{}}}protegoOptions(){let e=this.commonOptions();return e.headers[K.REST_API_PROTEGO_AUTH_KEY]=this._protegoApiToken,e}dome9Options(){let e=this.commonOptions();return e.headers[K.REST_API_DOME9_AUTH_KEY]=`${K.REST_API_DOME9_AUTH_TYPE} ${Buffer.from(this._protegoApiToken).toString("base64")}`,e}get options(){return this.shouldCallProtegoApi()?this.protegoOptions():this.dome9Options()}}const Q=require("download"),ee=require("got"),te=(e,t)=>Q(e,Object.assign({},t,{throwHttpErrors:!1,decompress:!1}));function ie(e,t,i,n,r,o,s,a){const u=new X(t,i,n,r,o,s,a);return e.debug(`download_fsp_bundle: url: ${u.fspBundleApi}`),te(u.fspBundleApi,u.options)}function ne(e,t,i,n,r,o,s,a){const u=new X(t,i,n,r,o,s,a);return e.debug(`download_proact_bundle: url: ${u.proactBundleApi}`),te(u.proactBundleApi,u.options)}const re=require("path"),oe=require("fs-extra"),se=re.join(K.ROOT_FOLDER,K.FSP_RES_FOLDER),ae=re.join(se,"manifest.json");class ue{constructor(){if(!oe.existsSync(ae))throw new Error(`Invalid Bundle Format-  Missing manifest: ${ae}`);this._manifest=require(ae),this._version=this._manifest.version}validate(){throw Error("Abstract - Not Implemented")}get version(){return this._version||null}isFSPLayerSupported(e){throw Error("Abstract - Not Implemented")}}const ce=require("lodash"),le=require("path"),pe=require("fs-extra"),de=require("compare-versions"),he=le.join(K.ROOT_FOLDER,K.FSP_RES_FOLDER),ge=le.join(he,"deps/java/");class fe extends ue{constructor(){super(),this._javaFsp=le.join(he,this._manifest.java),this._csharpFsp=le.join(he,this._manifest.csharp),this._pythonLayersFsp=this._manifest["python-layer"],this._nodejsLayersFsp=this._manifest["nodejs-layer"],this._javaLayersFsp=this._manifest["java-layer"],this._csharpLayersFsp=this._manifest["csharp-layer"],this._javaDeps=ge}validate(){if(!pe.existsSync(this._javaFsp)||!pe.existsSync(this._csharpFsp)||ce.isEmpty(this._pythonLayersFsp)||!ce.isObject(this._pythonLayersFsp)||ce.isEmpty(this._nodejsLayersFsp)||!ce.isObject(this._nodejsLayersFsp)||this.isJavaFSPLayerSupported()&&(ce.isEmpty(this._javaLayersFsp)||!ce.isObject(this._javaLayersFsp))||this.isCsharpFSPLayerSupported()&&(ce.isEmpty(this._csharpLayersFsp)||!ce.isObject(this._csharpLayersFsp)))throw new I("Invalid Bundle Format")}get javaFsp(){return this._javaFsp}get csharpFsp(){return this._csharpFsp}get javaDeps(){return this._javaDeps}getJavaLayerFsp(e){return this.isJavaFSPLayerSupported()?this._javaLayersFsp[e]:null}getPythonLayerFsp(e){return this._pythonLayersFsp[e]}getNodejsLayerFsp(e){return this._nodejsLayersFsp[e]}getCsharpLayerFsp(e){return this._csharpLayersFsp[e]}isJavaFSPLayerSupported(){return de.compare(this._version,"1.3.34",">=")}isCsharpFSPLayerSupported(){return de.compare(this._version,K.CSHARP_LAYER_SUPPORTED_VERSION,">=")&&!ce.isEmpty(this._csharpLayersFsp)}isFSPLayerSupported(e){switch(e){case"java8":case"java11":return this.isJavaFSPLayerSupported();case"python2.7":case"python3.6":case"python3.7":case"python3.8":return!0;case"nodejs12.x":case"nodejs10.x":case"nodejs8.10":return!0;case"dotnetcore2.1":case"dotnetcore3.1":return this.isCsharpFSPLayerSupported()}return!1}getFSPLayerByRuntimeAndRegion(e,t){switch(e){case"java8":case"java11":return this.getJavaLayerFsp(t);case"python2.7":case"python3.6":case"python3.7":case"python3.8":return this.getPythonLayerFsp(t);case"nodejs12.x":case"nodejs10.x":case"nodejs8.10":return this.getNodejsLayerFsp(t);case"dotnetcore2.1":case"dotnetcore3.1":return this.getCsharpLayerFsp(t)}return null}}class _e extends ue{constructor(){super(),this._reportEndpoint=this._manifest.reportEndpoint,this._policyEndpoint=this._manifest.policyEndpoint}validate(){}get reportEndpoint(){return this._reportEndpoint}get policyEndpoint(){return this._policyEndpoint}isFSPLayerSupported(e){return!1}}const me=require("lodash");class Pe extends Z{constructor(e,t,i,n,r,o){super(n,r,o),this._supportedRuntimes=e,this._layerRuntimes=t,this._codeInstrumentsRuntime=i}isLayerRuntime(e){return!me.isEmpty(e)&&this._layerRuntimes.includes(e)}get supportedRuntimes(){return this._supportedRuntimes}isSupportedRuntime(e){return!me.isEmpty(e)&&this._supportedRuntimes.includes(e)}isCodeInstrumentsRuntime(e){return!me.isEmpty(e)&&this._codeInstrumentsRuntime.includes(e)}isRegionRequired(e){throw Error("Abstract - Not Implemented")}isHandlerRequired(e){throw Error("Abstract - Not Implemented")}getFSPLayer(e,t,i,n){throw Error("Abstract - Not Implemented")}instrumentLambdaFunction(e,t,i,n,r,o){throw Error("Abstract - Not Implemented")}validate(e,t,i,n,r,o=!1){throw Error("Abstract - Not Implemented")}versionSupportForFSPRemove(e){throw Error("Abstract - Not Implemented")}removeFSP(e,t,i,n,r,o){throw Error("Abstract - Not Implemented")}validateFspRemoved(e,t,i,n,r,o=!1){throw Error("Abstract - Not Implemented")}getWrongAccountIdMessage(e){throw Error("Abstract - Not Implemented")}}const Ee=["python2.7","python3.6","python3.7","python3.8","java8","java11","nodejs12.x","nodejs10.x","nodejs8.10","dotnetcore2.0","dotnetcore2.1","dotnetcore3.1"],Fe=["python2.7","python3.6","python3.7","python3.8","java8","java11","nodejs12.x","nodejs10.x","nodejs8.10","dotnetcore2.1","dotnetcore3.1"],ve=["python2.7","python3.6","python3.7","python3.8","nodejs10.x","nodejs12.x"],Se=["java8","java11","nodejs8.10","dotnetcore2.0","dotnetcore2.1","dotnetcore3.1"],ye=require("lodash"),Ae=require("fs"),Te=require("fs-extra"),Oe=require("path"),Ce=require("jszip"),Re=require("glob"),be=Oe.join(K.ROOT_FOLDER,K.FSP_TEMP_FOLDER),we=Object.freeze({FSP_TEMP_FOLDER_ROOT:be,FSP_INJECTOR_OUTPUT_FOLDER:"output",PROTECTED_LAMBDA_FOLDER:"protected/",PATCH_FOLDER:"patches",ORIGINAL_FOLDER:"original",FSP_INJECTOR_INPUT_FOLDER:"input"});function Ie(e=""){this.debug(`Cleaning up generated files ${e}`);try{Te.removeSync(be)}catch(e){this.debug("Failed to cleanup directory: "+e)}}function Ne(e){Ae.existsSync(be)||Ae.mkdirSync(be);const t=Oe.join(be,e);return Ae.existsSync(t)||Ae.mkdirSync(t),t}function De(e,t){return new Promise(i=>{const n=Re.sync(e+"/**/*"),r=new Ce;ye.forEach(n,t=>{const i=t.substring(e.length);Ae.lstatSync(t).isDirectory()?r.folder(i):r.file(i,Ae.readFileSync(t))}),r.generateNodeStream({type:"nodebuffer",streamFiles:!0,compression:"DEFLATE",compressionOptions:{level:9}}).pipe(Ae.createWriteStream(t)).on("finish",(function(){i(t)}))})}const Le=require("lodash"),ke=require("path"),Ue=require("child_process").spawnSync,$e=require("adm-zip"),je=require("fs-extra"),xe=require("fs");function qe(e,t=[],i={}){this.debug("Please wait . . .");const n=Ue(e,t,i),r=n&&n.stdout&&n.stdout.toString(),o=n&&n.stderr&&n.stderr.toString();return r&&this.debug("runCommand:stdout = "+(r||"stdoud undefined")),o&&this.debug("runCommand:stderr = "+(o||"stderr undefined")),n}function Me(e,t,i,n){return new Promise((e,i)=>{const r=Le.bind(Ie,this);r();const o=ke.parse(t).ext,s=Ne(we.FSP_INJECTOR_OUTPUT_FOLDER),a=Le.isEmpty(n)?t:n.endsWith(o)?n:n+"."+o;var u=new $e(t);const c=ke.join(s,we.PROTECTED_LAMBDA_FOLDER);xe.existsSync(c)||xe.mkdirSync(c),u.extractAllTo(c,!0);const l=this.bundleDescriptor.javaDeps;try{je.copySync(l,c)}catch(e){throw new FspRemovalError(e.message,e)}Le.bind(De,this)(c,a).then(i=>{this.trace(`${i} - zip written.`),r(),this.debug(`File ${t} copied to ${i}`),e({artifact:i})}).catch(e=>{throw new FspRemovalError("Java remove FSP failed",e)})})}function Ge(e,t,i,n){return Promise.resolve().then(()=>{const e=Le.bind(qe,this),r=ke.parse(t).ext,o=Le.isEmpty(n)?t:n.endsWith(r)?n:n+"."+r,s=["-cp",this.bundleDescriptor.javaFsp,"agent.main.Main",t,o];Le.isEmpty(i)&&s.push(i);const a=e("java",s);if(0!==a.status||!Le.isEmpty(a.stderr)){const e=a.output.toString();throw new FspCodeInstrumentationError("Failed to build Java: "+e)}return{artifact:o}})}function Be(e,t){return!0}const Ve=require("lodash"),He=require("fs"),We=require("path"),Je=require("adm-zip"),Ke=require("jszip"),ze=`try { require('${K.NODE_PACKAGE_NAME}')();} catch(e) {} \n\n`,Ye=new RegExp(`^.*.${K.NODE_PACKAGE_NAME}.*$(\n\n|\n)?`,"gm");function Ze(e){return e.replace(/\s/g,"").startsWith(ze.replace(/\s/g,""))}function Xe(e){const t=Ve.split(e,".");if(2!==t.length)throw new Error(`Invalid Lambda Handler (${e}). Instrumentation cannot be done.`);const i=t.slice(0,-1).join("/"),n=We.posix.parse(i).dir;return{Method:Ve.last(t),BaseDir:n,Path:i}}function Qe(e,t,i,n,r,o){return new Promise((i,s)=>{const a=Xe(r),u=Ve.isEmpty(o)?n:o.endsWith(".zip")?o:o+".zip";n!==u&&He.copyFileSync(n,u),function(e,t,i){return new Promise((n,r)=>{const o=He.readFileSync(t),s=new Ke;s.loadAsync(o).then(t=>{for(const r in t.files){const o=t.files[r].name;if(i===o||i+".js"===o)return e.debug(`handler file: ${o}`),void s.file(o).async("nodebuffer").then(t=>{e.debug("Returning contents of handler file"),n({name:o,contents:t})})}e.log(`Failed to find handler: ${i}`),r(`Failed to find handler: ${i}`)})})}(e,n,a.Path).then(r=>{const o=He.readFileSync(n);Ke.loadAsync(o).then(n=>{e.debug(`instrumenting: ${r.name}`);const o=n.file(r.name),s=o.unixPermissions?"UNIX":"DOS";n.remove(r.name);let a=r.contents.toString("utf8");t===K.FTP_INSTRUMENTS_ACTIONS.add&&(Ze(a)||(e.debug(`instrumenting handler file: ${r.name}`),a=ze+a)),t===K.FTP_INSTRUMENTS_ACTIONS.remove&&(e.debug(`removing protego import header from handler file: ${r.name}`),a=function(e){return e.replace(Ye,"")}(a)),n.file(r.name,Buffer.from(a),{date:o.date,unixPermissions:o.unixPermissions,dosPermissions:o.dosPermissions}),n.generateNodeStream({type:"nodebuffer",streamFiles:!0,compression:"DEFLATE",platform:s,compressionOptions:{level:9}}).pipe(He.createWriteStream(u)).on("finish",(function(){e.trace(`${u} - zip written.`),i({artifact:u})}))})})})}function et(e,t,i,n){return Qe(this,K.FTP_INSTRUMENTS_ACTIONS.add,0,t,i,n)}function tt(e,t,i,n){return Qe(this,K.FTP_INSTRUMENTS_ACTIONS.remove,0,t,i,n)}function it(e,t,i=K.FTP_INSTRUMENTS_ACTIONS.add){const n=new Je(e).getEntries(),r=Xe(t),o=Ve.find(n,e=>e.entryName.endsWith(".js")&&function(e,t){try{return e.endsWith(".js")?e.slice(0,-".js".length):e}catch(t){return e}}(e.entryName)===r.Path);if(!o)throw new Error(`Failed to find Handler File:(${r.Path}). Instrumentation cannot be done`);if(!Ze(o.getData().toString())){if(i===K.FTP_INSTRUMENTS_ACTIONS.remove)return!0;throw new Error("Protego Header is missing. Instrumentation cannot be done")}if(i===K.FTP_INSTRUMENTS_ACTIONS.remove)throw new Error("Remove FSP Failed, Protego Header still exist.");return!0}function nt(e,t){return it(e,t)}function rt(e,t){return it(e,t,K.FTP_INSTRUMENTS_ACTIONS.remove)}const ot=require("lodash"),st=require("fs-extra"),at=require("path"),ut=at.join(K.ROOT_FOLDER,K.CACHE_FOLDER),ct=at.posix.join(K.FSP_TEMP_FOLDER,we.FSP_INJECTOR_OUTPUT_FOLDER),lt=at.join(__dirname,"..","scripts"),pt=at.join(__dirname,"..","third-party","bsdiff-4.3");function dt(){return this.debug("pullBSDiffDocker"),k(ot.bind(U,this,"docker",["pull","winfed/bsdiff4"],{},!0),this,4).catch(e=>{throw new DockerError("Failed to pull docker image: winfed/bsdiff4",e)})}function ht(){const e=this;return e.debug("prepareDockerScript"),Promise.resolve().then(()=>st.copy(at.join(lt,"bsdiff.sh"),at.join(ut,"bsdiff.sh"),{overwrite:!0})).catch(t=>{e.debug(`Failed to copy script: ${t}`)})}function gt(e){this.debug("runDocker bsdiff ...");const t=this,i=["run",...G({},this),"--rm","-v",K.ROOT_FOLDER+":/workdir","-w","/workdir","-t","winfed/bsdiff4",at.posix.join(K.CACHE_FOLDER,"bsdiff.sh"),"/workdir/"+ct,e];return this.debug(`Docker run with args ${i}`),Promise.resolve().then(ot.bind(U,this,"docker",i,{})).then(e=>{if(0!==e)throw new Error("Failed to run docker");t.debug("docker run successfully")})}function ft(e){const t=at.join(lt,"bsdiff.sh"),i=[at.join(K.ROOT_FOLDER,ct),e,pt],n={};return this.isTraceLevel&&(n.env={__PROTEGO_DEBUG:"true"}),this.trace(`LOCAL_THIRD_PARTY_BSDIFF_PATH: ${pt}`),Promise.resolve().then(ot.bind(U,this,t,i,n))}function _t(e){return this.debug(`Binary Diff ${e}`),K.IN_LAMBDA_MODE?(this.debug(`BinaryDiff Locally ${e} in AWS_LAMBDA Mode`),ot.bind(ft,this,e)()):Promise.resolve().then(ot.bind(dt,this)).then(ot.bind(ht,this)).then(ot.bind(gt,this,e)).catch(e=>{})}function mt(){return ot.bind(_t,this,"diff")()}function Pt(){return ot.bind(_t,this,"patch")()}const Et=require("lodash"),Ft=require("fs"),vt=require("fs-extra"),St=require("path"),yt=require("adm-zip"),At=require("jszip"),Tt=require("glob");function Ot(){return this.loggerOptions.debug}function Ct(e,t,i,n,r){const o=St.resolve(St.dirname(t)),s=St.basename(t);var a,u,c;if("dotnetcore2.1"==r?(a="netcoreapp2/FSPAgentInjector.dll",u="mcr.microsoft.com/dotnet/core/aspnet:2.1",c="dotnet"):(a="netcoreapp3/FSPAgentInjector.dll",u="mcr.microsoft.com/dotnet/core/aspnet:3.1",c="/opt/dotnet3/dotnet"),K.IN_LAMBDA_MODE){this.debug("getInjectorCommandArgs (PROTEGO_PLUGIN_IN_AWS_LAMBDA)"),this.debug(` - inputZip: ${s}`),this.debug(` - inputFolder: ${o}`);const t=St.join(o,s),r=St.join(n,we.PROTECTED_LAMBDA_FOLDER);return this.debug(`fsp_agent_injector: ${a}`),this.debug(`inputZipArtifact: ${t}`),this.debug(`protectedOutputFolder: ${r}`),this.debug(`handler: ${i}`),this.debug(`cwd: ${e}`),this.debug(`in_lambda_dotnet_cmd: ${c}`),{cmd:c,args:[a,t,i,r],options:{cwd:e,env:Object.assign({},process.env,{NUGET_PACKAGE_ROOT_FOLDER:"/var/lang/bin/shared"})}}}this.debug("inputFolder: "+o+"/input"),this.debug("outputFolder: "+n+"/output"),this.debug("injectorToolFolder: "+o+"/protego-agent");const l=Et.bind(Ot,this);return{cmd:"docker",args:["run","--rm",...G({},this),"-e","__PROTEGO_DEBUG="+l(),"-v",o+":/input","-v",n+":/output","-v",e+":/protego-agent","-w","/protego-agent","-t",u,"dotnet",a,"/input/"+s,i,"/output/"+we.PROTECTED_LAMBDA_FOLDER],options:{}}}function Rt(e){const t=this;if(K.IN_LAMBDA_MODE)return t.debug("PROTEGO_PLUGIN_IN_AWS_LAMBDA, Skip Pull docker image"),Promise.resolve();const i=["pull","dotnetcore2.1"==e?"mcr.microsoft.com/dotnet/core/aspnet:2.1":"mcr.microsoft.com/dotnet/core/aspnet:3.1"],n=Et.bind(Ot,t);return k(Et.bind(U,t,"docker",i,{},!n()),t,3).then(()=>t.debug("Pulled docker image successfully")).catch(e=>{if(Et.includes(e.toString(),"ENOENT"))throw new DockerError("FSP for dotnet needs docker. Please make sure that the docker is installed and running.",e);throw new DockerError("Failed to pull docker image",e)})}function bt(e){const t=Ne(we.FSP_INJECTOR_INPUT_FOLDER),i=new yt(this.bundleDescriptor.csharpFsp);return this.debug(`extractCSharpBundle: Extracting Agent Injector to ${t}`),i.extractAllTo(t,!0),this.bundleDescriptor.isCsharpFSPLayerSupported()&&(Ft.unlinkSync(St.join(t,"agent","lib","libosfsp_v1.so")),Ft.unlinkSync(St.join(t,"agent","lib","libosfsp_v2.so"))),t}function wt(e,t,i,n){const r=this,o=Ne(we.FSP_INJECTOR_OUTPUT_FOLDER);return Promise.resolve().then(()=>{r.debug("Instrumenting CSharp function");const s=Et.bind(Ct,r,e,t,i,o,n)(),a=Et.bind(Ot,r)();return Et.bind(U,r,s.cmd,s.args,s.options,!a)()}).then(e=>(r.debug("CSharp result:",e),o)).catch(e=>{if(e instanceof D){if(2===e.code)throw new FspAlreadyExistError;throw new FspCodeInstrumentationError("Failed to build CSharp",e)}throw new FspCodeInstrumentationError("Failed to build CSharp",e)})}function It(e,t,i){const n=this;return new Promise(r=>{n.debug(`Generatig artifact at: ${e}`);const o=St.join(e,we.PROTECTED_LAMBDA_FOLDER),s=Tt.sync(o+"/**/*"),a=new At;Et.forEach(s,e=>{const t=e.substring(o.length);Ft.lstatSync(e).isDirectory()?a.folder(t):a.file(t,Ft.readFileSync(e))});const u=St.parse(t).ext,c=Et.isEmpty(i)?t:i.endsWith(u)?i:i+"."+u;n.debug(`generateArtifact: Writing protected zip to: ${c}`),a.generateNodeStream({type:"nodebuffer",streamFiles:!0,compression:"DEFLATE",compressionOptions:{level:9}}).pipe(Ft.createWriteStream(c)).on("finish",(function(){r(c)}))})}function Nt(e,t){this.debug("Removing FSP");const i=Ne(we.FSP_INJECTOR_OUTPUT_FOLDER);return new Promise((n,r)=>{const o=new yt(e),s=St.join(i,"extracted");o.extractAllTo(s,!0);const a=St.join(s,"patch.zip"),u=St.join(s,"csharp_agent.dll");if(!Ft.existsSync(u))throw new FspDoesNotExistError;if(!Ft.existsSync(a))throw new FspRemoveUnsupportedVersionError(`FSP remove for runtime ${t} is not supported for FSP applied with plugin versions older than 10.1.8`);const c=new yt(St.join(s,"patch.zip")),l=St.join(i,"patches");c.extractAllTo(l,!0),Et.bind(Pt,this)().then(()=>{n(i)})})}function Dt(e,t,i,n,r){const o=this;if(Et.isEmpty(i))throw new FspCodeInstrumentationMissingHandlerError("Failed to build CSharp: Handler cannot be empty");const s=Et.bind(Ie,o),a=Et.bind(Rt,o,n);return Promise.resolve().then(()=>a()).then(()=>s("before instrumentCSharpFunction")).then(Et.bind(Nt,o,t,n)).then(e=>Et.bind(It,o,e,t,r)()).then(e=>(o.trace(`${e} - zip written.`),{artifact:e})).finally(s).catch(e=>{if(e instanceof ProtegoBaseErrorException)throw e;throw new FspRemovalError("CSharp remove FSP failed",e)})}function Lt(e,t){const i=this,n=St.join(e,we.PROTECTED_LAMBDA_FOLDER),r=St.join(e,we.ORIGINAL_FOLDER);Ft.existsSync(r)||Ft.mkdirSync(r),new yt(t).extractAllTo(r,!0);const o=St.join(e,"patches");return Et.bind(mt,this)().then(Et.bind(De,i,o,St.join(e,"patch.zip"))).then(e=>vt.copyFile(e,St.join(n,"patch.zip"))).then(()=>(i.trace(`${n} - zip written.`),e)).catch(e=>{if(e instanceof ProtegoBaseErrorException)throw e;throw new FspCodeInstrumentationError("Failed to createBinaryDiff",e)})}function kt(e,t,i,n,r){const o=this;if(Et.isEmpty(i))throw new FspCodeInstrumentationMissingHandlerError("Failed to build CSharp: Handler cannot be empty");const s=Et.bind(Ie,o),a=Et.bind(Rt,o,n);return Promise.resolve().then(()=>a()).then(()=>s("before instrumentCSharpFunction")).then(Et.bind(bt,o,n)).then(e=>Et.bind(wt,o,e,t,i,n)()).then(e=>Et.bind(Lt,o,e,t)()).then(e=>Et.bind(It,o,e,t,r)()).then(e=>(o.trace(`${e} - zip written.`),{artifact:e})).finally(s).catch(e=>{if(e instanceof ProtegoBaseErrorException)throw e;throw new FspCodeInstrumentationError("CSharp instrumentation failed",e)})}function Ut(e){this.debug("validateCSharpRemoveFsp");const t=new yt(e).getEntry("csharp_agent.dll");return this.debug(`validateCSharpRemoveFsp csharpAgentEntry: ${t}`),null===t}function $t(e,t,i){this.debug("validateCSharpFsp");const n=new yt(e),r=n.getEntry("csharp_agent.dll"),o=n.getEntry("patch.zip");return!(!r||!o||(this.trace(`validateCSharpFsp Done. (csharpAgent  ${r.name} && patch ${o.name})`),0))}const jt=require("compare-versions"),xt=require("lodash");class qt extends Pe{constructor(e,t,i){super(Ee,Fe,Se,e,t,i),this._bundleDescriptor=null,this.instrumentJavaFunction=xt.bind(Ge,this),this.instrumentNodeJsFunction=xt.bind(et,this),this.instrumentCSharpFunction=xt.bind(kt,this),this.removeFSPJava=xt.bind(Me,this),this.removeNodeJsFunction=xt.bind(tt,this),this.removeFspCsharp=xt.bind(Dt,this),this.validateNodeFsp=xt.bind(nt,this),this.validateJavaFsp=xt.bind(Be,this),this.validateCSharpFsp=xt.bind($t,this),this.validateCSharpRemoveFsp=xt.bind(Ut,this),this.validateNodeFSPRemove=xt.bind(rt,this)}get bundleDescriptor(){return null===this._bundleDescriptor&&(this._bundleDescriptor=new fe),this._bundleDescriptor}isRegionRequired(e){return this.isLayerRuntime(e)}isHandlerRequired(e){return this.isCodeInstrumentsRuntime(e)}getFSPLayer(e,t,i,n){this.debug("getFSPLayer:");const r={};switch(t){case"java8":case"java11":r.layer=this.bundleDescriptor.getJavaLayerFsp(i);break;case"python2.7":case"python3.6":case"python3.7":case"python3.8":r.layer=this.bundleDescriptor.getPythonLayerFsp(i);break;case"nodejs12.x":case"nodejs10.x":r.environment={NODE_OPTIONS:`--require ${K.NODE_PACKAGE_NAME}`},r.layer=this.bundleDescriptor.getNodejsLayerFsp(i);break;case"nodejs8.10":r.layer=this.bundleDescriptor.getNodejsLayerFsp(i);break;case"dotnetcore2.1":case"dotnetcore3.1":r.layer=this.bundleDescriptor.getCsharpLayerFsp(i);break;default:return this.debug(`Unsupported runtime for layers: ${t}`),null}return xt.isEmpty(r.layer)?(this.error(`Failed to add layer: ${e} ${t} (${i})`),null):(this.debug(`runtime: ${t}`),this.debug(`layer: ${r.layer}`),this.debug(`accountId: ${n.accountId}`),r)}instrumentLambdaFunction(e,t,n,r,o,s){return Promise.resolve().then(()=>{switch(this.log(`* Instrument ${i.bold(e)} (${t}) ...`),this.debug(`runtime: ${t}`),this.debug(`handler: ${n}`),this.debug(`environment: ${t}`),this.debug(`artifact: ${r}`),this.debug(`accountId: ${s.accountId}`),t){case"java8":case"java11":return this.instrumentJavaFunction(e,r,n,o);case"nodejs8.10":return this.instrumentNodeJsFunction(e,r,n,o);case"dotnetcore2.0":case"dotnetcore2.1":case"dotnetcore3.1":return this.log(`Instrument CSharp (${e})`),this.instrumentCSharpFunction(e,r,n,t,o);case"python2.7":case"python3.6":case"python3.7":case"python3.8":case"nodejs10.x":case"nodejs12.x":throw new N(`${t} FSP is inserted using layer only.`);default:throw new N(`Unsupported runtime: ${t}`)}})}validate(e,t,n,r,o,s=!1){try{switch(this.debug(`======= Validate :  ${i.bold(t)} =======`),this.debug(` runtime: ${n}`),this.debug(` handler: ${r}`),this.debug(` artifact: ${o}`),n){case"python2.7":case"python3.6":case"python3.7":case"python3.8":return!0;case"java8":case"java11":return this.validateJavaFsp(o,r);case"nodejs12.x":case"nodejs10.x":return!0;case"nodejs8.10":return this.validateNodeFsp(o,r);case"dotnetcore2.0":case"dotnetcore2.1":case"dotnetcore3.1":return this.validateCSharpFsp(o,r,n);default:throw new N(`Unsupported runtime: ${n}`)}}catch(e){if(s)throw e;return this.warn(`validate ${t}: Failed with exception ${e}`),!1}}versionSupportForFSPRemove(e){const t=this.bundleDescriptor&&this.bundleDescriptor.version;if(jt(t,"1.3.88")<0)throw new I(`FSP remove for runtime ${e} is not supported for FSP bundle version less than 1.3.88`)}removeFSP(e,t,n,r,o,s){return Promise.resolve().then(()=>{switch(this.log(`* Removing protection from ${i.bold(e)} (${t}) ...`),this.debug(`runtime: ${t}`),this.debug(`handler: ${n}`),this.debug(`environment: ${t}`),this.debug(`artifact: ${r}`),this.debug(`accountId: ${s.accountId}`),t){case"java8":case"java11":return this.versionSupportForFSPRemove(t),this.removeFSPJava(e,r,n,o);case"nodejs8.10":return this.removeNodeJsFunction(e,r,n,o);case"dotnetcore2.0":case"dotnetcore2.1":case"dotnetcore3.1":return this.log(`Instrument CSharp (${e})`),this.removeFspCsharp(e,r,n,t,o);default:throw new N(`Unsupported runtime: ${t}`)}})}validateFspRemoved(e,t,n,r,o,s=!1){try{switch(this.debug(`======= Validate FSP Remove :  ${i.bold(t)} =======`),this.debug(` runtime: ${n}`),this.debug(` handler: ${r}`),this.debug(` artifact: ${o}`),n){case"java8":case"java11":return this.validateJavaFsp(o,r);case"nodejs8.10":return this.validateNodeFSPRemove(o,r);case"dotnetcore2.0":case"dotnetcore2.1":case"dotnetcore3.1":return this.validateCSharpRemoveFsp(o,r);case"nodejs12.x":case"nodejs10.x":case"python2.7":case"python3.6":case"python3.7":case"python3.8":return!0;default:throw new N(`Unsupported runtime: ${n}`)}}catch(e){if(s)throw e;return this.warn(`validate ${t}: Failed with exception ${e}`),!1}}getWrongAccountIdMessage(e){return"\n\t\t * The AWS Account ID do not match the CloudGuard token.\n\t\t   Please make sure you are using the right AWS_PROFILE / Credentials.\n"+`\n\t\t** CloudGuard has Identified AWS Account ID: ${e} This account Id does not match the CloudGuard token used.\n`+"\t\t** To verify your aws account id run `aws sts get-caller-identity`"}}const Mt=["python3.6","python3.7","python3.8"],Gt=[],Bt=require("path"),Vt=require("fs"),Ht=require("fs-extra"),Wt=require("os").EOL;class Jt extends Pe{constructor(e,t,i){super(Mt,Gt,Mt,e,t,i),this._bundleDescriptor=null}get bundleDescriptor(){return null===this._bundleDescriptor&&(this._bundleDescriptor=new _e),this._bundleDescriptor}isSupportedRuntime(e){return this.__is_python_runtime(e)||this.__is_node_runtime(e)}isCodeInstrumentsRuntime(e){return this.__is_python_runtime(e)||this.__is_node_runtime(e)}isRegionRequired(e){return!1}isHandlerRequired(e){return!1}getFSPLayer(e,t,i,n){return this.debug("AzureFSPHelper.getFSPLayer: Layers are not supported for Azure"),null}instrumentLambdaFunction(e,t,n,r,o,s){return Promise.resolve().then(()=>{if(this.log(`* Instrument ${i.bold(e)} (${t}) ...`),this.__is_python_runtime(t)){const e=this.__createSidecarDir(r);return this.__generateConfigFile(e,t),this.__copyPythonShimFiles(e,t),this.__copyPythonCoreFiles(e),{artifact:e}}if(this.__is_node_runtime(t)){const e=this.__createSidecarDir(r);return this.__generateConfigFile(e,t),this.__copyNodeFSPFiles(e,t),this.__interceptNodeFunctions(r),{artifact:e}}throw new N(`Unsupported runtime: ${t}`)})}validate(e,t,i,n,r,o=!1){throw Error("Abstract - Not Implemented: validate")}versionSupportForFSPRemove(e){return!1}removeFSP(e,t,n,r,o,s){return Promise.resolve().then(()=>{if(this.log(`* Removing protection from ${i.bold(e)} (${t}) ...`),!this.__is_python_runtime(t)){if(this.__is_node_runtime(t))return this.__removeCloudguardFunction(e),void this.__removeNodeFSP(e);throw new N(`Unsupported runtime: ${t}`)}this.__removeCloudguardFunction(e)})}validateFspRemoved(e,t,n,r,o,s=!1){try{switch(this.debug(`======= Validate FSP Remove :  ${i.bold(t)} =======`),this.debug(` runtime: ${n}`),n){case"python3.6":case"python3.7":case"python3.8":const e=Bt.join(functionAppPath,K.CLOUDGUARD_FUNCTION_FOLDER_NAME);return!Vt.existsSync(e)}}catch(e){if(s)throw e;return this.warn(`validate ${t}: Failed with exception ${e}`),!1}}getWrongAccountIdMessage(e){return"\n\t\t * The Azure Subscription Id do not match the CloudGuard token.\n\t\t   Please make sure you are using the right Azure Subscription Id.\n"+`\n\t\t** Azure Subscription Id: ${e} This subscription Id does not match the CloudGuard token used.\n`+"\t\t** To verify your azure subscription id run `az account list`"}__createSidecarDir(e){const t=Bt.join(e,K.CLOUDGUARD_FUNCTION_FOLDER_NAME);return Vt.mkdirSync(t,{recursive:!0}),t}__generateConfigFile(e,t){const i=this.__fspResourceFolder();let n=this.__readFile(Bt.join(i,K.CLOUDGUARD_CONFIG_FILE_NAME));const r=this.bundleDescriptor.reportEndpoint,o=this.bundleDescriptor.policyEndpoint,s=Bt.join(e,K.CLOUDGUARD_CONFIG_FILE_NAME);let a=n.replace(K.CLOUDGUARD_REPORT_ENDPOINT_VALUE,r);a=a.replace(K.CLOUDGUARD_POLICY_ENDPOINT_VALUE,o);const u=JSON.parse(a);u[K.CLOUDGUARD_CONFIG_RUNTIME]=t,Vt.writeFileSync(s,JSON.stringify(u,null,2))}__fspResourceFolder(){return Bt.join(K.ROOT_FOLDER,K.FSP_RES_FOLDER)}__getRuntimeFolder(e){if(this.__is_python_runtime(e))return"python";if(this.__is_node_runtime(e))return"nodejs";throw new N(`Unsupported runtime: ${e}`)}__copyPythonShimFiles(e,t){const i=Bt.join(this.__fspResourceFolder(),this.__getRuntimeFolder(t));Ht.copySync(i,e)}__copyPythonCoreFiles(e){const t=Bt.join(this.__fspResourceFolder(),K.CLOUDGUARD_CORE_LIB_FOLDER);Ht.copySync(t,e)}__copyNodeFSPFiles(e,t){const i=Bt.join(this.__fspResourceFolder(),this.__getRuntimeFolder(t));Ht.copySync(i,e);const n=Bt.join(this.__fspResourceFolder(),K.CLOUDGUARD_CORE_LIB_FOLDER);Ht.copySync(n,e)}__getScriptFiles(e,t){const i=this.__getAzureFunctions(e),n=[];for(let r of i){if(!0===t&&r===K.CLOUDGUARD_FUNCTION_FOLDER_NAME)continue;const i=this.__readMetadata(e,r);n.push(Bt.join(e,r,this.__getScriptFile(i)))}return n}__getAzureFunctions(e){return Vt.readdirSync(e).filter(t=>Vt.statSync(Bt.join(e,t)).isDirectory()&&Vt.existsSync(Bt.join(e,t,K.CLOUDGUARD_AZURE_FUNCTION_METADATA_FILE)))}__interceptNodeFunctions(e){const t=this.__getScriptFiles(e,!0);for(let e of t)this.__interceptNodeFunction(e)}__interceptNodeFunction(e){try{let t=this.__readFile(e);if(t.includes(K.CLOUDGUARD_AZURE_FSP_REQUIRE_STATEMENT))return void this.debug(`${e} already has FSP protection`);t+=Wt+K.CLOUDGUARD_AZURE_FSP_REQUIRE_STATEMENT,this.debug(`Adding FSP protection to: ${e}`),Vt.writeFileSync(e,t,"utf-8")}catch(t){this.debug(`Failed to protect ${e} due to error: ${t}`)}}__readMetadata(e,t){const i=this.__readFile(Bt.join(e,t,K.CLOUDGUARD_AZURE_FUNCTION_METADATA_FILE));try{return JSON.parse(i)}catch(e){this.debug(`Not protecting ${Bt.basename(t)} as parsing metadata failed with error: ${e}`)}}__getScriptFile(e){return e[K.CLOUDGUARD_AZURE_SCRIPT_FILE_NAME]||K.CLOUDGUARD_AZURE_DEFAULT_SCRIPT_FILE}__removeCloudguardFunction(e){const t=Bt.join(e,K.CLOUDGUARD_FUNCTION_FOLDER_NAME);Ht.removeSync(t)}__removeNodeFSP(e){const t=this.__getScriptFiles(e,!0);for(let e of t)this.__removeNodeFSPFromSingleFunction(e)}__removeNodeFSPFromSingleFunction(e){try{let t=this.__readFile(e);if(!t.includes(K.CLOUDGUARD_AZURE_FSP_REQUIRE_STATEMENT))return void this.debug(`${e} does not have FSP protection`);t=t.includes(Wt+K.CLOUDGUARD_AZURE_FSP_REQUIRE_STATEMENT)?t.replace(Wt+K.CLOUDGUARD_AZURE_FSP_REQUIRE_STATEMENT,""):t.replace(K.CLOUDGUARD_AZURE_FSP_REQUIRE_STATEMENT,""),this.debug(`Removing FSP protection from: ${e}`),Vt.writeFileSync(e,t,"utf-8")}catch(t){this.debug(`Failed to remove FSP from ${e} due to error: ${t}`)}}__is_python_runtime(e){return this.__is_runtime(e,"python")}__is_node_runtime(e){return this.__is_runtime(e,"node")}__is_runtime(e,t){return("string"==typeof e?e.toLowerCase():"").startsWith(t)}__readFile(e){return Vt.readFileSync(e,"utf-8").toString()}}class Kt{static bundleDescriptor(e){return e===K.PROVIDER_AZURE?new _e:new fe}static fspHelper(e,t,i,n){return e===K.PROVIDER_AZURE?new Jt(t,i,n):new qt(t,i,n)}}const zt=require("lodash"),Yt=require("fs-extra"),Zt=require("path"),Xt=require("decompress"),Qt=require("cli-progress"),ei=require("flat-cache"),ti=require("hash-files"),ii=require("glob"),ni=Zt.join(K.ROOT_FOLDER,K.FLAT_CACHE);class ri extends Z{constructor(e,t,i,n,r){super(e,t),this.ETAG_KEY=zt.kebabCase(i+"ETAG"),this.HASH_KEY=zt.kebabCase(i+"HASH"),this.VERSION_KEY=zt.kebabCase(i+"VERSION"),this.name=i,this.destinationPath=n,this.awsAccountId=r}downloadBundle(){throw Error("Abstract - Not Implemented")}validateData(e){throw Error("Abstract - Not Implemented")}getBundleData(){throw Error("Abstract - Not Implemented")}getHashIgnoreFiles(){return null}cleanUp(e){e.removeKey(this.ETAG_KEY),e.removeKey(this.HASH_KEY),e.removeKey(this.VERSION_KEY),Yt.existsSync(this.destinationPath)&&Yt.removeSync(this.destinationPath),e.save(!0)}installDependencies(e,t){this.trace(`=======> destinationPath: ${this.destinationPath}`);const i=ei.load("config",Zt.resolve(ni));let n=null;return Promise.resolve().then(()=>this.getFolderHash(this.destinationPath)).then(r=>{let o;const s=i.getKey(this.ETAG_KEY),a=i.getKey(this.HASH_KEY),u=i.getKey(this.VERSION_KEY)||null,c={query:{}};e&&(c.query={version:e}),t&&(c.query.provider=t),s&&a&&a===r&&u===e?c.headers={"If-None-Match":s}:this.cleanUp(i);const l=new Qt.Bar({noTTYOutput:!0,notTTYSchedule:5e3,format:`Updating ${this.name} | [{bar}] {percentage}% | ETA: {eta}s`});return this.downloadBundle(c).on("redirect",(e,t)=>{this.debug(`Redirected to: ${t.href}`),delete t.headers.authorization}).on("response",e=>{this.log("Initializing..."),o=zt.pick(e,["statusCode","statusMessage","headers","url","content-length"]),e&&200===e.statusCode&&(Yt.removeSync(this.destinationPath),e.headers&&e.headers.etag&&(n=e.headers.etag))}).on("downloadProgress",(e,...t)=>{200===o.statusCode&&(0===e.percent&&l.start(e.total,0),l.update(e.transferred),1===e.percent&&l.stop())}).then(t=>{if(304===o.statusCode)return this.validateData(this.destinationPath,!1);if(200!==o.statusCode)throw new L(o,t);return t.length?(Yt.mkdirpSync(this.destinationPath),Xt(t,this.destinationPath).then(()=>{try{return this.validateData(this.destinationPath,!0)}catch(e){return this.cleanUp(i),this.trace(e.toString()),this.error("Oops, Something went wrong try again later...")}}).then(()=>this.getFolderHash(this.destinationPath)).then(t=>{n&&(i.setKey(this.HASH_KEY,t),i.setKey(this.VERSION_KEY,e),i.setKey(this.ETAG_KEY,n),this.trace(`Save to cache: bundle_hash:${t} | version: ${e} | newEtag: ${n}`)),i.save(!0)})):void 0}).then(()=>this.log("Initializing, Done.")).then(()=>this.getBundleData()).catch(t=>{this.debug(`error message: ""${t.message}""`),this.cleanUp(i);const n="ENOTFOUND"===t.code?900:t.statusCode||1e3;let r="";const o=zt.get(t,'headers["x-amzn-errortype"]');switch(n){case 401:r=`Unauthorized!, Please verify your plugin configurations: (Err: ${n})\n`+"\n\t\t * Ensure cloudguardAccessToken is valid",this.error(r);break;case 403:this.trace("awsErrorType:",o),r=`Forbidden!, Please verify your plugin configurations: (Err: ${n})\n`,r+="AccessDeniedException"===o?this.getWrongAccountIdMessage(this.awsAccountId):"\n\t\t * Ensure cloudguardAccessToken is valid",this.error(r);break;case 404:"Cloud account not found."===t.message?(r=`Access Denied!, Please verify your plugin configurations: (Err: ${n})\n`,r+=this.getWrongAccountIdMessage(this.awsAccountId),this.error(r)):e&&this.error(`FSP Version '${e}' does not exist, In order to get the latest, run without 'FSPVersion' (Err: ${n})`),this.error("Bundle Does not exist\n\n  Please verify your plugin configurations,\n"+`  You should consider upgrading with the last plugin version (Err: ${n})`);break;case 500:this.error("Bundle Does not exist\n\n  Please verify your plugin configurations,\n"+`  You should consider upgrading with the last plugin version (Err: ${n})`);break;case 502:this.error("Unexpected server error\n\n  Please verify your plugin configurations,\n"+`  You should consider upgrading with the last plugin version (Err: ${n})`);break;case 900:this.error("Failed to download bundle (ENOTFOUND)\n\n"+`  Please verify your plugin configurations, (Err: ${n})`);break;case 1e3:default:this.error("Unexpected Error!\n\n  Please verify your plugin configurations,\n"+`  You should consider upgrading with the last plugin version (Err: ${n})`)}})})}getWrongAccountIdMessage(e){return"\n\t\t * The AWS Account ID do not match the CloudGuard token.\n\t\t   Please make sure you are using the right AWS_PROFILE / Credentials.\n"+`\n\t\t** CloudGuard has Identified AWS Account ID: ${e} This account Id does not match the CloudGuard token used.\n`+"\t\t** To verify your aws account id run `aws sts get-caller-identity`"}getFolderHash(e,t=this.getHashIgnoreFiles()){return new Promise((i,n)=>{if(!Yt.existsSync(e))return i(null);const r={files:e+"/**"};t&&(r.files=ii.sync(r.files,{ignore:t})),ti(r,(e,t)=>e?(n(e),i(null)):i(t))})}}const oi=require("path").join(K.ROOT_FOLDER,K.FSP_RES_FOLDER);class si extends ri{constructor(e,i,n,r,o,s,a,u,c){super(e,i,"FSP Plugin",oi,n),this.provider=c,this.downloadBundle=t.partial(ie,this,n,r,o,s,a,u),this.protegoFspBundleDescriptor={},this.fspHelper=Kt.fspHelper(c,e,i)}validateData(){this.protegoFspBundleDescriptor=Kt.bundleDescriptor(this.provider),this.protegoFspBundleDescriptor.validate()}getBundleData(){return this.protegoFspBundleDescriptor}getWrongAccountIdMessage(e){return this.fspHelper.getWrongAccountIdMessage(e)}}const ai=require("crypto"),ui=require("lodash");class ci extends Z{static getBundleVersion(){try{return(new ue).version}catch(e){return null}}constructor(e,t,n,r){super(t,n,r),this.stats={succeeded:[],failures:[]},this.protegoConfig=e,this.protegoFspBundleDescriptor=null,this.pluginHelper=Kt.fspHelper(this.protegoConfig.provider,t,n,r),e.fsp.protectAllFunctions||(this.warn(i.yellow.bold("protectAllFunctions is False !!!")),this.log(i.grey.bold("in order to enable, modify to -> `protectAllFunctions: true`")))}isSupportedRuntime(e){return this.pluginHelper.isSupportedRuntime(e)}isCodeInstrumentsRuntime(e){return this.pluginHelper.isCodeInstrumentsRuntime(e)}isLayerRuntime(e){return!ui.isEmpty(e)&&null!=this.protegoFspBundleDescriptor&&this.protegoFspBundleDescriptor.isFSPLayerSupported(e)}isValidApiToken(){return!ui.isEmpty(this.protegoConfig)&&!ui.isEmpty(this.protegoConfig.protegoApiToken)}loadDependencies(){if(this.log("FSP:: loadDependencies"),K.IN_LAMBDA_MODE)return this.log("loadDependencies - In Lambda Mode, using local bundle."),this.protegoFspBundleDescriptor=Kt.bundleDescriptor(this.protegoConfig.provider),Promise.resolve;if((!this.isValidApiToken()||ui.isEmpty(this.protegoConfig.accountId)||ui.isEmpty(this.protegoConfig.protegoEndpoint)&&(ui.isEmpty(this.protegoConfig.protegoApiId)||ui.isEmpty(this.protegoConfig.protegoStage)))&&(!this.isValidApiToken()||this.protegoConfig.protegoApiToken.indexOf(":")<0))throw new InvalidConfigurationError;return new si(this.logger,this.loggerOptions,this.protegoConfig.accountId,this.protegoConfig.protegoApiToken,this.protegoConfig.protegoEndpoint,this.protegoConfig.protegoApiId,this.protegoConfig.protegoStage,this.protegoConfig.baseUrl,this.protegoConfig.provider).installDependencies(this.protegoConfig.fsp.protegoFSPVersion,this.protegoConfig.provider).then(e=>{this.protegoFspBundleDescriptor=e})}invokeRemoteScanAccount(e){return function(e,t,i,n,r,o,s,a){const u=new X(t,i,n,r,o,s);return e.debug(`invoke_scan: url: ${u.exploreAccountApi(a)}`),ee.post(u.exploreAccountApi(a),Object.assign({},u.options))}(this,this.protegoConfig.accountId,this.protegoConfig.protegoApiToken,this.protegoConfig.protegoEndpoint,this.protegoConfig.protegoApiId,this.protegoConfig.protegoStage,this.protegoConfig.baseUrl,e).catch(e=>{this.debug("Invoke scan account failed",e)})}getFSPLayer(e,t,i){return this.pluginHelper.getFSPLayer(e,t,i,this.protegoConfig)}instrumentLambdaFunction(e,t,i,n,r){return this.pluginHelper.instrumentLambdaFunction(e,t,i,n,r,this.protegoConfig)}validate(e,t,i,n,r=!1){return this.pluginHelper.validate(this.protegoConfig,e,t,i,n,!1)}versionSupportForFSPRemove(e){this.pluginHelper.versionSupportForFSPRemove(e)}removeFSP(e,t,i,n,r){return this.pluginHelper.removeFSP(e,t,i,n,r,this.protegoConfig)}validateFspRemoved(e,t,i,n,r=!1){return this.pluginHelper.validateFspRemoved(this.protegoConfig,e,t,i,n,r)}getUniqueFunctionId(){return{PROTEGO_FSP_CUSTOMER_ACCOUNT_ID:`${this.protegoConfig.accountId}`+":"+ai.randomBytes(16).toString("hex")}}mergeProtegoEnv(e,t){if(t){let i=e.NODE_OPTIONS;i&&(i=i.replace(/\s+/g," ")),ui.extend(e,t),i&&t.NODE_OPTIONS&&!ui.includes(i,t.NODE_OPTIONS)&&(e.NODE_OPTIONS=`${t.NODE_OPTIONS} ${i}`)}return e||{}}}const li=require("lodash"),pi=require("path"),di=pi.join(K.ROOT_FOLDER,K.FUNCTION_PROACT_RES_FOLDER);class hi{constructor(e=di){this._path=e;const t=pi.join(e,"manifest.json"),i=require(t);this._version=i.version,this._installScript=li.get(i,"scripts.install")}validate(){if(li.isEmpty(this._version)||li.isEmpty(this._installScript))throw new Error("Invalid Bundle Format")}get version(){return this._version||null}get path(){return this._path}get installScript(){return this._installScript}toJSON(e){return{version:this._version,installScript:this._installScript}}}const gi=require("lodash"),fi=require("path").join(K.ROOT_FOLDER,K.FUNCTION_PROACT_RES_FOLDER);class _i extends ri{constructor(e,t,i,n,r,o,s,a,u,c,l,p){super(e,t,"Proact",fi,i),this.proactDockerImage=u,this.downloadBundle=gi.partial(ne,this,i,n,r,o,s,a),this.protegoFspBundleDescriptor={},this.containerCmd=c,this.containerOptions=l||{},this.dockerArgs=p||[]}validateData(e,t){return this.protegoProactBundleDescriptor=new hi(e),this.protegoProactBundleDescriptor.validate(),this.log(` - Initializing docker (${this.proactDockerImage}) - please wait, this action may take some time ...`),k(gi.bind(U,this,this.containerCmd,[...this.dockerArgs,"pull",this.proactDockerImage],this.containerOptions,!0),this,4).catch(e=>{e instanceof D&&("ENOENT"===e.code&&this.error("Unexpected Error, please ensure that `docker` is installed and running ..."),this.error(e.message)),this.error(e)})}getBundleData(){return this.protegoProactBundleDescriptor}getHashIgnoreFiles(){return["**/node_modules/**","**/cache/**","**/package-lock.json","**/*.pyc"]}}class mi{constructor(e,t,i,n){this._accessKeyId=e,this._secretAccessKey=t,this._sessionToken=i,this._region=n}get accessKeyId(){return this._accessKeyId}get secretAccessKey(){return this._secretAccessKey}get sessionToken(){return this._sessionToken}get region(){return this._region}}(process.env.__PROTEGO_DEBUG||"DEBUG"===process.env.PROTEGO_LOG_LEVEL)&&(process.env.AWSJS_DEBUG=1);const Pi=require("aws-sdk"),Ei=require("aws-sdk/lib/util");var Fi=require("proxy-agent"),vi=process.env.HTTPS_PROXY||process.env.https_proxy;function Si(){const e=this;return Promise.resolve().then(()=>(e.trace("CredentialProviderChain"),(new Pi.CredentialProviderChain).resolvePromise())).then(e=>{this.trace("CredentialProviderChain",V(e,2)),Pi.config.credentials=e}).then(()=>(new Pi.STS).getCallerIdentity().promise()).then(i=>{const n=process.env.AWS_REGION||process.env.AMAZON_REGION||process.env.AWS_DEFAULT_REGION;if(n&&Pi.config.credentials instanceof Pi.EnvironmentCredentials)return e.trace("envRegion: ",n),n;if(Pi.Config.region)return e.trace("AWS.Config.region",Pi.Config.region),Pi.Config.region;const r=Pi.config.credentials.profile||process.env.AWS_PROFILE||Ei.defaultProfile;e.trace("profile",r);try{const i=Ei.getProfilesFromSharedConfig(Ei.iniLoader,process.env[Ei.sharedCredentialsFileEnv]);return e.trace(`has profile ${r}`,r in i),t.get(i,r,{}).region||n||null}catch(t){return e.trace("Missing Credentials, fallback to Environment Credentials",t),n||null}}).then(t=>{e.trace("region",t),null===t&&e.error("Missing AWS Region, please set AWS_DEFAULT_REGION or AWS_REGION Environment variable.");const i=new mi(Pi.config.credentials.accessKeyId,Pi.config.credentials.secretAccessKey,Pi.config.credentials.sessionToken,t);return e.debug("Using AWS Credentials:",V(i,2)),e.trace("credentials.region",t),i}).catch(t=>{throw e.trace(t),new Error(t)})}t.isEmpty(vi)||Pi.config.update({httpOptions:{agent:Fi(vi)}});class yi extends Z{static getBundleVersion(){try{return(new hi).version}catch(e){return null}}constructor(e,i,n,r){super(i,n,r),this.protegoConfig=e,this.runProcess=t.bind(U,this),this.getAWSCredentials=t.bind(Si,this)}isValidApiToken(){return!t.isEmpty(this.protegoConfig)&&!t.isEmpty(this.protegoConfig.protegoApiToken)}loadDependencies(){return(!this.isValidApiToken()||t.isEmpty(this.protegoConfig.accountId)||t.isEmpty(this.protegoConfig.protegoEndpoint)&&(t.isEmpty(this.protegoConfig.protegoApiId)||t.isEmpty(this.protegoConfig.protegoStage)))&&(!this.isValidApiToken()||this.protegoConfig.protegoApiToken.indexOf(":")<0)&&this.error("Invalid Configuration"),new _i(this.logger,this.loggerOptions,this.protegoConfig.accountId,this.protegoConfig.protegoApiToken,this.protegoConfig.protegoEndpoint,this.protegoConfig.protegoApiId,this.protegoConfig.protegoStage,this.protegoConfig.baseUrl,this.protegoConfig.proact.DockerImage,this.protegoConfig.containerCmd,this.protegoConfig.containerOptions,this.protegoConfig.dockerArgs).installDependencies(this.protegoConfig.proact.ProactVersion).then(e=>{this.protegoProactBundleDescriptor=e})}run(e,i,n=[]){return this.trace("Prepare Proact env..."),this.loggerOptions.trace&&!n.includes("-v")&&n.push("-v"),this.protegoConfig.baseUrl&&(n.push("-b"),n.push(this.protegoConfig.baseUrl)),n.includes("-o")||n.includes("--output")||(n.push("-o"),n.push(`${this.protegoConfig[K.PLUGIN_TYPE_KEY]}_output`)),W(this.protegoConfig[K.PLUGIN_TYPE_KEY])||n.push("--no_legacy"),Promise.resolve().then(()=>t.isEmpty(i)?this.getAWSCredentials():i).then(t=>{this.trace(`region: ${t.region}`),this.trace("awsCredentials",V(t,2)),this.log(" | --- Scanning --- | please wait, this action may take some time ...");const i=[...this.protegoConfig.dockerArgs,"run","--rm","-t","-v",`${$(e)}:/home/usr`,"-v",`${$(this.protegoProactBundleDescriptor.path)}:/home/app`,"--env",`AWS_ACCOUNT_ID=${this.protegoConfig.accountId}`,"--env",`AWS_ACCESS_KEY_ID=${t.accessKeyId}`,"--env",`AWS_SECRET_ACCESS_KEY=${t.secretAccessKey}`,"--env",`AWS_DEFAULT_REGION=${t.region}`,"--env","AWS_SESSION_TOKEN="+(t.sessionToken?`'${t.sessionToken}'`:""),"--env",`PROTEGO_WORKING_DIR_PATH=${$(e)}`,"--env",`__PROTEGO_DEBUG=${this.loggerOptions.trace||"false"}`,...this.protegoConfig.containerUser,this.protegoConfig.proact.DockerImage,"python","/home/app/run.py",...n];return this.runProcess(this.protegoConfig.containerCmd,i,this.protegoConfig.containerOptions)}).then(e=>{}).catch(e=>{e instanceof D&&("ENOENT"===e.code&&this.error("Unexpected Error, please ensure that `docker` is installed and running ..."),this.error(e.message)),this.error(e)})}}const Ai=e=>!0!==e&&!1!==e&&t.isEmpty(e);class Ti{constructor(e={}){this._data={Enabled:t.get(e,"Enabled"),FailThreshold:t.get(e,"FailThreshold")}}toJSON(){return t.omitBy(this._data,Ai)}}class Oi{constructor(e){this._data={PermissiveRole:new Ti(t.get(e,"Features.PermissiveRole")).toJSON(),CredentialsUsage:new Ti(t.get(e,"Features.CredentialsUsage")).toJSON(),VulnerableDependency:new Ti(t.get(e,"Features.VulnerableDependency")).toJSON(),RuleViolation:new Ti(t.get(e,"Features.RuleViolation")).toJSON()}}toJSON(){return t.omitBy(this._data,Ai)}}class Ci{constructor(e){this._Features=new Oi(e).toJSON(),this._enabled=t.get(e,"Enabled",!1),this._proactVersion=t.get(e,"ProactVersion",null),this._storeJobReport=t.get(e,"StoreJobReport"),this._tags=t.get(e,"Tags"),this._dockerImage=t.get(e,"dockerImage","protego/protego-runtime:latest"),this._parallel=t.get(e,"Parallel",1),this._timeProfiling=t.get(e,"TimeProfiling"),this._jsonOutput=t.get(e,"JsonOutput",!1)}get ProactVersion(){return this._proactVersion}get Enabled(){return this._enabled}get Globals(){return t.omitBy({Features:t.omitBy(this._Features,Ai)},Ai)}get DockerImage(){return this._dockerImage}get Parallel(){return this._parallel}get TimeProfiling(){return this._timeProfiling}get JsonOutput(){return this._jsonOutput}getAccount(e={}){return t.omitBy(Object.assign({},e,{Tags:t.omitBy(this._tags,Ai),StoreJobReport:this._storeJobReport}),Ai)}}class Ri{constructor(e){this._Features=new Oi(e).toJSON(),this._enabled=t.get(e,"Enabled")}get Enabled(){return this._enabled}toJSON(){return t.omitBy({Features:t.omitBy(this._Features,Ai),Enabled:this._enabled},Ai)}}const bi=require("path"),wi=require("chalk"),Ii=require("fs");class Ni extends Z{constructor(e,t,i,n,r){super(e,t,i),this._protegoConfig={},this._withFsp=n,this._withProact=r,this.logger=e,this._proactPlugin=null,this._fspPlugin=null}get fspConfig(){return this._fspPlugin&&this._protegoConfig.fsp||{}}get proactConfig(){return this._proactPlugin&&this._protegoConfig.proact||{}}get protegoConfig(){return this._protegoConfig&&this._protegoConfig||{}}get isFSPEnabled(){return!t.isEmpty(this._fspPlugin)}get isProactEnabled(){return!t.isEmpty(this._proactPlugin)}get protegoFspBundleDescriptor(){return this._fspPlugin&&this._fspPlugin.protegoFspBundleDescriptor}get protegoProactBundleDescriptor(){return this._proactPlugin&&this._proactPlugin.protegoProactBundleDescriptor}get isGenerateRolesOnly(){return this._proactPlugin&&this._proactPlugin.generateRolesOnly}setGenerateRolesOnly(){this._proactPlugin&&(this._proactPlugin.generateRolesOnly=!0,this._fspPlugin=null)}setup(){!1!==this._withFsp&&!1!==this._protegoConfig.fsp.Enabled&&(this._fspPlugin=new ci(this._protegoConfig,this.logger,this._loggerOptions,`${this.log_tag}: fsp`)),!1!==this._withProact&&!1!==this._protegoConfig.proact.Enabled&&(this._proactPlugin=new yi(this._protegoConfig,this.logger,this._loggerOptions,`${this.log_tag}: proact`))}isBase64Token(e){return e.indexOf(":")<0}isValidApiToken(){return!t.isEmpty(this._protegoConfig)&&!t.isEmpty(this._protegoConfig.protegoApiToken)}setProtegoConfig(e){if(K.IN_LAMBDA_MODE)return this._protegoConfig={fsp:{Enabled:!0}},void this.debug("In Lambda Mode: _protegoConfig:",JSON.stringify(this._protegoConfig));let i,n,r=e.protegoAccessToken||e.cloudguardAccessToken;try{t.isEmpty(r)||(this.isBase64Token(r)?(i=Buffer.from(t.trim(r),"base64").toString("ascii"),n=JSON.parse(i)):n={apiToken:r}),t.isEmpty(n&&n.token)||this.error("Incompatible protegoAccessToken, Please get a new protegoAccessToken from Protego console."),this._protegoConfig={protegoAccessToken:r,protegoApiId:n&&n.apiId,protegoStage:n&&n.stage,protegoApiToken:n&&n.apiToken,protegoEndpoint:n&&n.endpoint,baseUrl:e.baseUrl,fsp:{Enabled:!e.fsp||t.isUndefined(e.fsp.Enabled)||"true"===e.fsp.Enabled.toString(),protectAllFunctions:!e.fsp||t.isUndefined(e.fsp.protectAllFunctions)||"true"===e.fsp.protectAllFunctions.toString(),protegoExitOnFailure:!e.fsp||t.isUndefined(e.fsp.exitOnFailure)?void 0:"true"===e.fsp.exitOnFailure.toString(),protegoFSPVersion:t.get(e,"fsp.FSPVersion",null)},proact:new Ci(e.proact||{}),containerCmd:q(e,this),containerOptions:M(this),containerUser:G(e,this),dockerArgs:B(e,this),provider:e.provider},this._protegoConfig[`${K.PLUGIN_TYPE_KEY}`]=e[`${K.PLUGIN_TYPE_KEY}`]}catch(e){this.trace(e),this.error(e instanceof I?e:"Invalid Configuration")}(!this.isValidApiToken()||t.isEmpty(this._protegoConfig.protegoEndpoint)&&(t.isEmpty(this._protegoConfig.protegoApiId)||t.isEmpty(this._protegoConfig.protegoStage)))&&(!this.isValidApiToken()||this._protegoConfig.protegoApiToken.indexOf(":")<0)&&this.error(new InvalidConfigurationError)}configure(e){let i=e&&(e.protego||e.cloudguard)||this.convertBackwardCompatibility(e)||{};try{const e=this.loadConfigFile()||{},n=Object.assign({},e,{},t.pickBy(i,e=>void 0!==e));this.setProtegoConfig(n),this.setup()}catch(e){this.error(e instanceof I?e:new InvalidConfigurationError(null,e))}}setAccountId(e){this._protegoConfig.accountId=e,this._fspPlugin&&(this._fspPlugin.protegoConfig.accountId=e),this._proactPlugin&&(this._proactPlugin.protegoConfig.accountId=e)}configure_for_sam(e){let t=e&&e.protego||{};try{this.setProtegoConfig(t),this.setup()}catch(e){this.error(e instanceof I?e:new InvalidConfigurationError)}}loadDependencies(){return Promise.resolve().then(()=>this._fspPlugin&&this._fspPlugin.loadDependencies()).then(()=>this._proactPlugin&&this._proactPlugin.loadDependencies())}loadConfigFile(e="protego-config.json"){try{let t=bi.join(process.cwd(),e);Ii.existsSync(t)||(t=bi.join(process.cwd(),"cloudguard-config.json"));const i=require(t);return this.debug(`loading config file: ${e} - `,i),i}catch(e){}return null}convertBackwardCompatibility(e){const t={fsp:{}};return e.protegoFsp&&(t.protegoAccessToken=e.protegoFsp.protegoAccessToken,t.fsp.protectAllFunctions=e.protegoFsp.protectAllFunctions,t.fsp.exitOnFailure=e.protegoFsp.exitOnFailure,t.fsp.FSPVersion=e.protegoFsp.FSPVersion),t}invokeRemoteScanAccount(){if(this._fspPlugin)return this._fspPlugin.invokeRemoteScanAccount()}invokeRemoteScanFunction(e){if(this._fspPlugin)return this._fspPlugin.invokeRemoteScanAccount(e)}getFSPLayer(e,t,i){if(this._fspPlugin)return this._fspPlugin.getFSPLayer(e,t,i)}instrumentLambdaFunction(e,t,i,n,r){if(this._fspPlugin)return this._fspPlugin.instrumentLambdaFunction(e,t,i,n,r)}removeFSP(e,t,i,n,r){if(this._fspPlugin)return this._fspPlugin.removeFSP(e,t,i,n,r)}getUniqueFunctionId(){if(this._fspPlugin)return this._fspPlugin.getUniqueFunctionId()}mergeProtegoEnv(e,t){if(this._fspPlugin)return this._fspPlugin.mergeProtegoEnv(e,t)}validateFsp(e,t,i,n,r=!1){if(this._fspPlugin)return this._fspPlugin.validate(e,t,i,n,r)}validateFspRemoved(e,t,i,n,r=!1){if(this._fspPlugin)return this._fspPlugin.validateFspRemoved(e,t,i,n,r)}isFSPSupportedRuntime(e){if(this._fspPlugin)return this._fspPlugin.isSupportedRuntime(e)}isLayerRuntime(e){if(this._fspPlugin)return this._fspPlugin.isLayerRuntime(e)}isCodeInstrumentsRuntime(e){if(this._fspPlugin)return this._fspPlugin.isCodeInstrumentsRuntime(e)}runProactScanner(e,t,i){if(this._proactPlugin)return this._proactPlugin.run(e,t,i)}getPackageVersion(e){try{return require(e+"package.json").version}catch(e){}return null}getVersions(){let e=this.getPackageVersion("../");return null===e&&(e=this.getPackageVersion("../../../")),{"Protego Tool Version":null!==e?e:"?","FSP Version":ci.getBundleVersion()||"N/A","Proact Version":yi.getBundleVersion()||"N/A"}}printVersions(e=!1){const i="\n------------ Versions ------------\n"+t.map(this.getVersions(),(e,t)=>`${t}: ${wi.white(e)}`).join("\n")+"\n----------------------------------";return e?i:this.cleanLog(i)}}class Di{static Parse(e){try{return new Di(e)}catch(e){return null}}constructor(e){if("string"!=typeof e)throw new Error("ARN should be a string");const t=e.split(":");if(t.length<7||t.length>8)throw new Error("Invalid Layer ARN: "+e);this._service=t[2],this._region=t[3],this._accountId=t[4],this._name=t[6],this._version=t[7]||null}get service(){return this._service}get region(){return this._region}get accountId(){return this._accountId}get name(){return this._name}get version(){return this._version||null}}const Li=require("chalk"),ki=(require("fs-extra"),require("path"));require("is-path-inside");var Ui=Object.freeze({instrumentsSingleFunction:function(e,t){if(this.debug("Deploy Single Function"),this.protegoPlugin.isFSPEnabled){if(this.checkFspFlag(t))return Promise.resolve().then(()=>this.prepareTemp()).then(()=>{this.fspFunctionList={[e]:t}}).then(()=>this.instrumentLambdaFunction(e,t,this.stats,!0)).then(e=>{this.stats=e,this.validate(),this.debug("All done.")}).catch(e=>{if(e instanceof ProtegoBaseErrorException)throw e;this.error(e)});this.protegoPlugin.fspConfig.protectAllFunctions&&this.debug("Skipping:",e,Li.grey.bold("(In order to enable, modify to under the function-> `protego:\n\tEnabled true`)"))}else this.debug("FSP is Disabled ! ",Li.grey.bold("(In order to enable, modify -> `protego:\n\tfsp:\n\t\tEnabled: true`)"))},instrumentsMultipleFunctions:function(){return this.debug("Instruments Multiple Functions"),Promise.resolve().then(()=>this.prepareTemp()).then(()=>this.instrumentAllFSPLambdaFunction()).then(e=>this.updateAllLambdasHash(e)).then(e=>{this.debug("All done"),this.stats=e,this.isPrePackage&&this.isPackaging&&(t.set(this.serverless.service,"protego.stats",this.stats),t.set(this.serverless.service,"protego.fspFunctionList",this.fspFunctionList))}).catch(e=>{this.error(e)})},reportAfterDeploy:function(){if(this.trace("Report After Deploy"),this.protegoPlugin&&this.protegoPlugin.isFSPEnabled)return Promise.resolve().then(()=>this.showStatsResults()).then(()=>t.isEmpty(this.stats.succeeded)?{}:this.protegoPlugin.invokeRemoteScanAccount())},reportAfterPackage:function(){if(this.protegoPlugin.isFSPEnabled)return Promise.resolve().then(()=>this.validate()).then(()=>this.showStatsResults())},instrumentLambdaFunction:function(e,i,n,r=!1){const o=this.getRuntime(i);return Promise.resolve().then(()=>this.getArtifact(i)).then(n=>{if(this.protegoPlugin.isCodeInstrumentsRuntime(o)){const r=this.prepareOutputFolder(e,i,n);return this.protegoPlugin.instrumentLambdaFunction(e,o,i.handler,n,r).then(e=>(this.updateArtifact(i,e.artifact),e&&!t.isEmpty(e.handler)&&e.handler!==i.handler&&(this.log("Handler name has been modify to: ",e.handler),i.handler=e.handler),e))}return Promise.resolve({})}).then(n=>{const s=this.protegoPlugin.getUniqueFunctionId();if(this.protegoPlugin.isLayerRuntime(o)){const r=this.protegoPlugin.getFSPLayer(e,o,this.getRegion());this.canAddLayer(e,i,r.layer)&&(this.log(`* Adding layer to ${Li.bold(e)} (${o}) ...`),n.fspLayer=r.layer,i.layers=[...i.layers||[],r.layer],r.environment&&t.extend(s,r.environment))}return i.environment=this.protegoPlugin.mergeProtegoEnv(i.environment||{},s),r||this.updateLambdasData(e,n.artifact,s,n&&n.handler,n.fspLayer),s}).then(t=>(this.trace(`Adding Environment variables: ${JSON.stringify(t,null,4)}`),Object.assign({},n,{succeeded:[...n.succeeded,e]}))).catch(t=>(this.protegoPlugin.fspConfig.protegoExitOnFailure&&(this.serverless.service.package.individually?this.log("exitOnFailure - ON"):this.debug("Disabling 'exitOnFailure' flag - is supported only when 'service: package.individually' mode is enabled"),this.error(t)),this.warn(t),Object.assign({},n,{failures:[...n.failures,e]})))},instrumentAllFSPLambdaFunction:function(){return t.forEach(this.getAllNoneFSPFunctionsList(),(e,t)=>this.stats.skipped.push(t)),t.map(this.fspFunctionList,(e,t)=>i=>this.instrumentLambdaFunction(t,e,i)).reduce((e,t)=>e.then(e=>t(e)),Promise.resolve(this.stats))},updateAllLambdasHash:function(e){return t.each(this.fspFunctionList,(i,n)=>{if(e.succeeded.includes(n)&&t.get(i,"protego.artifact"))try{this.updateLambdasHash(n,i.protego.artifact)}catch(i){e.succeeded=t.without(e.succeeded,n),e.failures.push(n)}}),Promise.resolve(e)},getFinalPackageArtifact:function(e){const i=this.options.package||this.serverless.service.package.path||ki.join(this.serverless.config.servicePath||".",".serverless");if(this.serverless.config.servicePath&&!t.endsWith(i,".serverless")){const t=ki.join(this.serverless.config.servicePath,".serverless");if(e.startsWith(t))return e.replace(t,i)}return e},validate:function(){if(t.isEmpty(this.stats.succeeded))return;this.log("Validate Packages");const e=this.stats.failures.length;return this.stats.succeeded=t.filter(this.stats.succeeded,e=>{const i=this.fspFunctionList[e],n=this.getFinalPackageArtifact(this.getArtifact(i)),r=this.getRuntime(i),o=this.getLayers(i);if(this.protegoPlugin.isLayerRuntime(r)&&!this.validateLayerFsp(e,o,r,i,this.getRegion()))return this.stats.failures.push(e),!1;const s=this.protegoPlugin.validateFsp(e,r,i.handler,n);return!s&&this.stats.failures.push(e),t.set(i,"protego.finalArtifact",ki.relative(this.serverless.config.servicePath,n)),s}),(this.stats.failures.length>e||this.protegoPlugin.fspConfig.protegoExitOnFailure&&!t.isEmpty(this.stats.failures))&&(this.stats.succeeded=[],this.stats.skipped=[],this.showStatsResults(),this.error("Validation Failed!")),Promise.resolve()},checkFspFlag:function(e){const i=this.getRuntime(e);if(!this.protegoPlugin.isFSPSupportedRuntime(i))return this.warn(`${e.name} has unsupported runtime: ${i}`),!1;const n=t.get(e,"cloudguard.fsp.Enabled"),r=t.isUndefined(n)?t.get(e,"protego.fsp.Enabled"):n,o=t.get(e,"protegoFsp"),s=t.isUndefined(r)?t.isUndefined(o)?null:o:r,a=null!==s?"true"===s.toString():void 0,u=void 0!==a?a:this.protegoPlugin.fspConfig.protectAllFunctions;return!(t.isEmpty(e.package)||t.isEmpty(e.package.artifact)&&!0!==t.get(e,"package.individually"))||this.serverless.service.package.individually||u===this.protegoPlugin.fspConfig.protectAllFunctions||this.error("\n"+`  - ${e.name} \n`+"       Your function has a configuration conflict with serverless, \n       Protego can't support mixed FSP configuration when using single package,\n       please set 'package: individually:true' or remove 'protego: -> fsp: -> Enabled: true' flag from this function\n\n       More details about serverless packing individually - https://serverless.com/framework/docs/providers/aws/guide/packaging/"),u},getAllFSPFunctionsList:function(){return t.pickBy(this.serverless.service.functions,(e,t)=>this.checkFspFlag(e))},getAllNoneFSPFunctionsList:function(){const e=t.keys(this.fspFunctionList);return t.pickBy(this.serverless.service.functions,(t,i)=>!e.includes(i))},updateArtifact:function(e,i){e.protego=t.merge(e.protego||{},{artifact:i}),!t.isEmpty(e.package)&&e.package.artifact&&(e.package.artifact=i),!this.serverless.service.artifact&&this.serverless.service.package.artifact&&(this.serverless.service.package.artifact=i)},updateLambdasData:function(e,i,n,r,o){const s=this.serverless.service.provider.compiledCloudFormationTemplate.Outputs,a=this.serverless.service.provider.compiledCloudFormationTemplate.Resources;if(!s||!a)return;const u=a[this.serverless.getProvider("aws").naming.getLambdaLogicalId(e)];u&&u.Properties&&(u.Properties.Environment=u.Properties.Environment||{},u.Properties.Environment.Variables=this.protegoPlugin.mergeProtegoEnv(u.Properties.Environment.Variables||{},n),t.isEmpty(o)||(u.Properties.Layers=[...u.Properties.Layers||[],o],this.debug("Update FSP Layer: "+u.Properties.Layers)),!t.isEmpty(r)&&t.isString(r)&&r!==u.Properties.handler&&(u.Properties.Handler=r))},updateLambdasHash:function(e,i){const n=this.serverless.service.provider.compiledCloudFormationTemplate.Outputs,r=this.serverless.service.provider.compiledCloudFormationTemplate.Resources;if(!n||!r)return;const o=this.serverless.getProvider("aws").naming,s=o.getLambdaVersionLogicalId.bind(o),a=s(e,"");let u;const c=t.find(r,(e,t)=>!("AWS::Lambda::Version"!==e.Type||!t.startsWith(a)||(u=t,0)));if(c){delete r[u];const t=function(e){const t=y.readFileSync(e),i=A.createHash("sha256");return i.setEncoding("base64"),i.write(t),i.end(),i.read()}(i),o=s(e,t);r[o]=c,r[o].Properties.CodeSha256=t,n[`${c.Properties.FunctionName.Ref}QualifiedArn`].Value.Ref=o}return Promise.resolve()},canAddLayer:function(e,i,n){if(t.isEmpty(n)&&this.error(`Missing layer data ${e}`),!t.isEmpty(i.layers)){5===i.layers.length&&this.error(`Max layers in use to for function, fallback to old FSP plugin ${e}`);const r=Di.Parse(n);t.some(i.layers,e=>{const t=Di.Parse(e);return t&&r.name===t.name})&&this.error(`Protego FSP layer already exists in ${e} ...`)}return!0},validateLayerFsp:function(e,i,n,r,o){if(t.isEmpty(i))return!1;if(!("nodejs10.x"!==n&&"nodejs12.x"!==n||r.environment.NODE_OPTIONS&&r.environment.NODE_OPTIONS.includes(K.NODE_PACKAGE_NAME)))return!1;const s=this.protegoPlugin.protegoFspBundleDescriptor.getFSPLayerByRuntimeAndRegion(n,o);return t.some(i,e=>e===s)}});const $i=require("lodash");var ji=Object.freeze({hookServerlessAWSPseudoParameters:function(e,t){const i=$i.find(e.pluginManager.plugins,e=>"ServerlessAWSPseudoParameters"===$i.get(e,"constructor.name"));i&&i.hooks&&(i.serverless.service.provider.compiledCloudFormationTemplate=t,$i.find(i.hooks,(e,t)=>$i.isFunction(e)&&e.name&&e.name.includes("addParameters")).call(),i.serverless.service.provider.compiledCloudFormationTemplate=e.service.provider.compiledCloudFormationTemplate)}});const xi=require("is-path-inside"),qi=require("path"),Mi=require("upath"),Gi=require("lodash"),Bi=require("fs-extra");var Vi=Object.freeze({getFunctionProactConfig:function(e){const t=(e.cloudguard||e.protego||{}).proact;return t?(this.protegoPlugin.isGenerateRolesOnly&&(t.Features={}),new Ri(t).toJSON()):{}},getFunctionCodeLocation:function(e){const t=this.getArtifact(e);if(xi(t,this.serverless.config.servicePath))return t;const i=qi.join(this.protegoTmpDirPath,qi.basename(t));return Bi.copySync(t,i,{overwrite:!0}),i},scanSingleFunctionFunction:function(e,t){this.debug("scanSingleFunctionFunction",e);const i=Gi.get(this.serverless.service.provider,"remoteFunctionData.Configuration.Role"),n={Account:this.protegoPlugin.proactConfig.getAccount({ProtegoAccessToken:`${this.protegoPlugin.protegoConfig.protegoAccessToken.trim()}`}),Globals:this.protegoPlugin.proactConfig.Globals,Functions:{[this.provider.naming.getLambdaLogicalId(e)]:Object.assign({FriendlyName:e,Runtime:t.runtime,Handler:t.handler,Role:i,CodeLocation:Mi.toUnix(qi.relative(this.serverless.config.servicePath,this.getArtifact(t)))},this.getFunctionProactConfig(t))}};return n.Account.StoreJobReport=!1,this.scanProactWithTemplate(n)},mergeCustomProviderResources:function(){const e=Gi.cloneDeep(this.serverless.service.provider.compiledCloudFormationTemplate),t=Gi.cloneDeep(this.serverless.service.resources);return t&&!t.Resources&&(t.Resources={}),t&&!t.Outputs&&(t.Outputs={}),Gi.merge(e,t),Gi.each(ji,t=>t(this.serverless,e)),e},scanMultipleFunction:function(){const e=qi.join(this.protegoTmpDirPath,"compiledCloudFormationTemplate.json"),t=this.mergeCustomProviderResources();this.serverless.utils.writeFileSync(e,t);const i={Account:this.protegoPlugin.proactConfig.getAccount({ProtegoAccessToken:`${this.protegoPlugin.protegoConfig.protegoAccessToken.trim()}`}),Globals:this.protegoPlugin.proactConfig.Globals,Integrations:{Cloudformation:{Template:Mi.toUnix(qi.relative(this.serverless.config.servicePath,e))}},Functions:Gi.reduce(this.serverless.service.functions,(e,t,i)=>Object.assign({},e,{[this.provider.naming.getLambdaLogicalId(i)]:Object.assign({CodeLocation:Mi.toUnix(qi.relative(this.serverless.config.servicePath,this.getFunctionCodeLocation(t))),FriendlyName:i},this.getFunctionProactConfig(t))}),{})};return this.protegoPlugin.isGenerateRolesOnly&&(i.Globals.ProtegoGeneratedRole=!0,i.Globals.Features={PermissiveRole:{Enabled:!0},CredentialsUsage:{Enabled:!1},VulnerableDependency:{Enabled:!1},RuleViolation:{Enabled:!1}}),this.scanProactWithTemplate(i)},scanProactWithTemplate:function(e){const t=qi.join(this.protegoTmpDirPath,"protego.yml");this.serverless.utils.writeFileSync(t,e);const i=this.provider.getCredentials(),n=!Gi.isEmpty(i)&&!Gi.isEmpty(i.credentials)&&new mi(i.credentials.accessKeyId,i.credentials.secretAccessKey,i.credentials.sessionToken,this.provider.getRegion()),r=((e,t,i)=>{let n=[];return n.push("-p"),n.push(i),e.storeReport&&n.push("-s"),(e.jsonOutput||t.JsonOutput)&&n.push("-j"),e.parallel?(n.push("--parallel"),n.push(e.parallel)):t.Parallel&&(n.push("--parallel"),n.push(t.Parallel)),e.timeProfiling?n.push("--time_profiling"):t.TimeProfiling&&n.push("--time_profiling"),e.tags&&(n.push("--tags"),n.push(`${e.tags}`)),e.verbose&&n.push("-v"),n})(this.inputOptions,this.protegoPlugin.proactConfig,qi.relative(this.serverless.config.servicePath,t));return this.debug("this.protegoPlugin.proactConfig",this.protegoPlugin.proactConfig),this.debug("additionalArgs",r),this.protegoPlugin.runProactScanner(this.serverless.config.servicePath,n,r)}});const Hi=require("chalk"),Wi=require("fs-extra"),Ji=require("path"),Ki="serverless-plugin-cloudguard",zi=e=>void 0!==process.env.PROTEGO_DEBUG||void 0!==process.env.SLS_DEBUG||e&&e.verbose;class Yi extends Z{constructor(e,i){super(e.cli,{debug:zi(i)},`${Ki}`),this.pluginType=this.getPluginType(),t.extendWith(this,Ui),t.extendWith(this,Vi);const n=e&&e.processedInput||{},r=n.commands||[],o=n.options||{};r.some(e=>["deploy","package","cloudguard"].includes(e))&&(o&&!0===o.disableProtego?this.log(Hi.yellow.bold("SKIPPING... Protego Plugin - Disabled !!!")):(this.serverless=e,this.options=i,this.inputOptions=o||{},this.provider=this.serverless.getProvider("aws"),this.serverlessTmpDirPath=Ji.join(this.serverless.config.servicePath,".serverless"),this.protegoTmpDirPath=Ji.join(this.serverlessTmpDirPath,".protego"),this.trace("plugin - serverlessTmpDirPath",this.serverlessTmpDirPath),this.trace("plugin - protegoTmpDirPath",this.protegoTmpDirPath),this.isSingleFunctionMode=o&&(o.f||o.function)||!1,this.isPackaging=r&&r.includes("package"),this.isDeploying=r&&r.includes("deploy"),this.isPrePackage=!t.isEmpty(this.inputOptions.package),this.fspFunctionList=[],this.stats={succeeded:[],failures:[],skipped:[]},this.commands={package:{options:{token:{shortcut:"t",usage:"Access Token"},storeReport:{usage:"(optional)(proact only) store report history on protego backend"},jsonOutput:{shortcut:"j",usage:"(optional)(proact only) generates output in json format instead of yaml"},parallel:{shortcut:"l",usage:"(experimental)(proact only) number of parallel functions to scan"},timeProfiling:{usage:"(experimental)(proact only) add time profiling indication to the output"},tags:{usage:"(optional)(proact only) tags key=value,key=value"},verbose:{shortcut:"v",usage:"(optional) verbose cloudguard debug logs"}}},deploy:{options:{token:{shortcut:"t",usage:"Access Token"},storeReport:{usage:"(optional)(proact only) store report history on protego backend"},jsonOutput:{shortcut:"j",usage:"(optional)(proact only) generates output in json format instead of yaml"},parallel:{shortcut:"l",usage:"(experimental)(proact only) number of parallel functions to scan"},timeProfiling:{usage:"(experimental)(proact only) add time profiling indication to the output"},tags:{usage:"(optional)(proact only) tags key=value,key=value"},verbose:{shortcut:"v",usage:"(optional) verbose cloudguard debug logs"}}},cloudguard:{usage:"Cloudguard",lifecycleEvents:["cloudguard"],options:{version:{shortcut:"v",usage:"display version"}}}},this.hooks={"cloudguard:cloudguard":this.handleProtegoCommand.bind(this),"after:package:cleanup":this.setup.bind(this),"before:package:finalize":this.prePackageFinalize.bind(this),"after:package:finalize":this.postPackageFinalize.bind(this),"before:aws:deploy:deploy:uploadArtifacts":this.validate.bind(this),"before:deploy:function:deploy":this.handleSingleFunctions.bind(this),"after:deploy:function:deploy":this.reportAfterDeploy.bind(this),"after:aws:info:displayFunctions":this.reportAfterDeploy.bind(this)},this.isPrePackage&&this.isDeploying&&(this.hooks["before:aws:deploy:deploy:checkForChanges"]=this.initDeployFromPrePackage.bind(this))))}getPluginType(){const e=Ji.basename(Ji.dirname(__dirname));this.debug(`sls: getPluginType() pluginType: ${e}`);const t=e.indexOf("-")+1,i=e.lastIndexOf("-");return e.substring(t,i)}initProtegoPlugin(){this.protegoPlugin=new Ni(this.serverless.cli,{debug:this._loggerOptions.debug},Ki);const e=this.serverless.service&&this.serverless.service.custom||{};let t=e.protego||e.cloudguard||{};t[K.PLUGIN_TYPE_KEY]=this.pluginType,this.serverless.pluginManager.cliOptions.token&&(t.protegoAccessToken=t.cloudguardAccessToken=this.serverless.pluginManager.cliOptions.token);try{this.protegoPlugin.configure(e||{})}catch(e){throw this.handleConfigurationError(e),e}this.fspConfig=this.protegoPlugin.fspConfig,!1!==this.fspConfig.protegoExitOnFailure||this.serverless.service.package.individually||(this.fspConfig.protegoExitOnFailure=!0,this.warn("Disabling 'exitOnFailure' flag - is supported only when 'service: package.individually' mode is enabled"))}handleProtegoCommand(){this.trace("handleProtegoCommand"),this.initProtegoPlugin();const e=this.serverless.pluginManager.cliOptions;if(this.debug(JSON.stringify(e),t.size(e),t.keys(e)),!0===e.version||!0===e.v)return this.displayVersions()}generateRoles(){return this.debug("generateRoles"),this.initProtegoPlugin(),this.protegoPlugin.setGenerateRolesOnly(!0),Promise.resolve().then(()=>this.serverless.pluginManager.run(["package"])).then(()=>{this.log("Done")})}setup(){if(this.debug("setup"),this.protegoPlugin)return void this.warn("(protego plugin is already loaded)");this.initProtegoPlugin();const e=t.filter(this.serverless.pluginManager.plugins,e=>"ServerlessEnterprisePlugin"!==t.get(e,"constructor.name"));return t.last(e)!==this&&this.error("protego plugin must be the last in the plugins list"),this.protegoPlugin.isProactEnabled||this.protegoPlugin.isFSPEnabled?Promise.resolve().then(()=>this.getAccountId()).then(e=>this.protegoPlugin.setAccountId(e)).then(()=>this.protegoPlugin.loadDependencies()).catch(e=>{this.handleConfigurationError(e),this.error(e)}):(this.warn(Hi.yellow.bold("SKIPPING... all features are disabled...")),Promise.resolve())}initDeployFromPrePackage(){if(this.isDeploying&&this.isPrePackage)return this.debug("Deploy From Pre Package (--package)"),this.setup().then(()=>this.validatePrePackage());this.warn("Init Deploy From Pre Package from wrong state isDeploying: "+`${this.isDeploying}, isPrePackage: ${this.isPrePackage}`)}validatePrePackage(){if(this.protegoPlugin&&this.protegoPlugin.isFSPEnabled)return t.isEmpty(t.get(this.serverless,"service.protego"))&&this.error("For using deploy with --package you have to prepackage before with sls package --package __path__ with protego plugin enabled"),this.stats=this.serverless.service.protego.stats,this.fspFunctionList=this.serverless.service.protego.fspFunctionList,this.validate();this.warn(this.protegoPlugin?"FSP is disabled":"Protego Plugin in not initialized")}prePackageFinalize(){return this.trace("##### package:prePackageFinalize ####"),Promise.resolve().then(()=>this.protegoPlugin.isProactEnabled&&this.scanMultipleFunction()).then(()=>{if(this.protegoPlugin.isFSPEnabled)return this.fspFunctionList=this.getAllFSPFunctionsList(),this.instrumentsMultipleFunctions();this.debug("FSP is Disabled ! ",Hi.grey.bold("(In order to enable, modify -> `protego: -> fsp: -> Enabled: true`)"))})}postPackageFinalize(){return this.protegoPlugin.isFSPEnabled?Promise.resolve().then(()=>this.isPackaging&&!this.isSingleFunctionMode?this.reportAfterPackage():{}):Promise.resolve()}handleSingleFunctions(){const e=this.options.functionObj,t=e.name;return Promise.resolve().then(()=>this.setup()).then(()=>this.protegoPlugin.isProactEnabled&&this.scanSingleFunctionFunction(t,e)).then(()=>this.protegoPlugin.isFSPEnabled&&this.instrumentsSingleFunction(t,e))}displayVersions(){return this.trace("displayVersions"),Promise.resolve().then(()=>this.protegoPlugin.printVersions()).catch(e=>{this.warn("displayVersions: something went wrong..."),this.debug(e)})}handleConfigurationError(e){if(e instanceof I&&e.message.includes("Invalid Configuration"))return this.error(Hi.bold.yellow(`\n\n  ${e.message}:\n`)+"           Please insure to set this field in `serverless.yml`:\n               * cloudguardAccessToken                \n\n           - More information can be found in `README.md`\n\n")}getAccountId(){return this.provider.request("STS","getCallerIdentity",{}).then(e=>e.Account)}getArtifact(e){const i=!t.isEmpty(e.package)&&e.package.artifact||this.serverless.service.artifact||this.serverless.service.package.artifact;return this.trace("getArtifact",e.name,"artifact: ===> ",i),i}getRuntime(e){return e&&e.runtime||this.serverless.service.provider.runtime}getLayers(e){return e&&e.layers||[]}getRegion(){return t.get(this.serverless,"processedInput.options.region",this.provider.getRegion())}prepareTemp(){Wi.existsSync(this.protegoTmpDirPath)||Wi.mkdirsSync(this.protegoTmpDirPath)}prepareOutputFolder(e,i,n){if(!t.isEmpty(i.package)&&i.package.artifact){const t=Ji.join(this.protegoTmpDirPath,e);return Wi.existsSync(t)||Wi.mkdirsSync(t),Ji.join(t,Ji.basename(n||""))}return n.startsWith(this.serverlessTmpDirPath)?n:Ji.join(this.protegoTmpDirPath,Ji.basename(n||""))}showDeprecationWarning(){if(!W(this.pluginType))return;let e=J("serverless-protego-plugin","serverless-cloudguard-plugin","plugin");this.cleanLog(e)}showStatsResults(){let e="\n";const i=this.protegoPlugin.protegoFspBundleDescriptor.version,n=i?` (${i})`:"";if(!t.isEmpty(this.stats.succeeded)||!t.isEmpty(this.stats.failures)||!t.isEmpty(this.stats.skipped))return e+=`${Hi.yellow.underline.bold(`Protego - FSP Plugin${n} Summary:`)}\n`,!t.isEmpty(this.stats.succeeded)&&t.isArray(this.stats.succeeded)&&(e+=`\n  ${Hi.green.underline.bold("Protected Functions:")}\n`,this.stats.succeeded.forEach(i=>{const n=this.fspFunctionList[i],r=t.get(n,"protego.finalArtifact",t.get(n,"package.artifact","N/A"));e+=`    ${Hi.green("✓")} ${i}:  ${Hi.green("Protected")} (${Hi.white(r)})\n`})),!t.isEmpty(this.stats.skipped)&&t.isArray(this.stats.skipped)&&(e+=`\n  ${Hi.cyan.underline.bold("Skipped Functions:")}\n`,this.stats.skipped.forEach(t=>e+=`    ${Hi.cyan("*")} ${t}:  ${Hi.cyan("Skipped - Not Protected")}\n`)),!t.isEmpty(this.stats.failures)&&t.isArray(this.stats.failures)&&(e+=`\n  ${Hi.red.underline.bold("Failures:")}\n`,this.stats.failures.forEach(t=>e+=`    ${Hi.red("!")} ${t}:  ${Hi.red("Not Protected")}\n`),e+=Hi.grey("\n      *) For more information, run with SLS_DEBUG=*\n"),e+=Hi.grey("     **) In order to disable a function you cans add 'protego: -> fsp/; -> Enabled: false' under function block in serverless.yml\n"),e+=Hi.grey("    ***) You can set 'exitOnFailure: true' in serverless.yml under custom.fsp\n")),this.isPackaging&&(e+=Hi.grey("\n(!! Note: you are using 'package' command, means the functions and template are only created locally.)")),this.cleanLog(e),this.showDeprecationWarning(),e;this.showDeprecationWarning()}}const Zi=require("download"),Xi=require("path"),Qi=require("fs"),en=require("fs-extra"),tn=require("fs"),nn=require("lodash");process.env.__PROTEGO_DEBUG&&(process.env.AWSJS_DEBUG=1);const rn=require("aws-sdk");var on=require("proxy-agent"),sn=process.env.HTTPS_PROXY||process.env.https_proxy;nn.isEmpty(sn)||rn.config.update({httpOptions:{agent:on(sn)}});class an{static getFunctionConfig(e,t){var i=void 0!==e?{region:e}:{};let n={FunctionName:t,Qualifier:"$LATEST"};return new rn.Lambda(i).getFunction(n).promise()}static updateFunctionConfig(e,t,i){var n=void 0!==e?{region:e}:{};let r=new rn.Lambda(n);return i.FunctionName=t,r.updateFunctionConfiguration(i).promise()}static updateFunctionCode(e,t,i){var n=void 0!==e?{region:e}:{};let r=new rn.Lambda(n),o={FunctionName:t,ZipFile:Buffer.from(tn.readFileSync(i),"base64")};return r.updateFunctionCode(o).promise()}static _doGetFunctionsFromCfStack(e,t,i,n,r=[],o=!0){let s={StackName:t};return n&&(s.NextToken=n),e.listStackResources(s).promise().then(n=>{let s=nn.map(nn.filter(n.StackResourceSummaries,e=>"AWS::Lambda::Function"===e.ResourceType),e=>e.PhysicalResourceId);i=i.concat(s);let a=nn.map(nn.filter(n.StackResourceSummaries,e=>"AWS::CloudFormation::Stack"===e.ResourceType),e=>e.PhysicalResourceId);return r=r.concat(a),n.NextToken?an._doGetFunctionsFromCfStack(e,t,i,n.NextToken,r,o):o&&r.length?(t=r.pop(),an._doGetFunctionsFromCfStack(e,t,i,null,r,o)):i})}static getFunctionsFromCfStack(e,t){var i=void 0!==e?{region:e}:{};let n=new rn.CloudFormation(i);return new Promise((e,i)=>{an._doGetFunctionsFromCfStack(n,t,[],null).then(t=>{e(t)}).catch(e=>{i(e)})})}}const un=require("lodash");class cn{get supported_service(){return"base"}constructor(e){if(!cn.isArn(e))throw new I(`Invalid Arn: ${e} `);if(this.arn=e,this.split_arn=e.split(":"),this.service=this.split_arn[2],this.region=this.split_arn[3],this.awsAccountId=this.split_arn[4],this.resource=un.join(un.slice(this.split_arn,5),":"),this.resource_split=this.resource.split("/"),"base"!==this.supported_service&&this.service!==this.supported_service)throw new I(`Invalid Arn service: ${this.service}, expected: ${this.supported_service}`)}static isArn(e){return"string"==typeof e&&e.startsWith("arn")&&e.split(":").length>=6}}class ln extends cn{get supported_service(){return"lambda"}get functionName(){return this.split_arn[6]}get version(){return this.split_arn[7]||"$LATEST"}arnWithVersion(e){return"arn:aws:lambda:"+this.region+":"+this.awsAccountId+":function:"+this.functionName+":"+e}}class pn extends cn{get supported_service(){return"cloudformation"}get stackName(){return this.resource_split[1]}}const dn=require("path"),hn=require("lodash"),gn=require("chalk");class fn{constructor(e,t,i,n,r=K.FTP_INSTRUMENTS_ACTIONS.add){this._protegoPlugin=t,this._region=i,this.action=r,hn.isEmpty(n)?(this._functionArn=e,cn.isArn(this._functionArn)?this.parseArn(this._functionArn):this._functionName=e):(this._functionConfig=n,this._functionName=e)}get functionArn(){return this._functionArn}get awsAccountId(){return this._awsAccountId}get functionConfig(){return this._functionConfig}get localCodePath(){return this._localCodePath}get localProtectedCodePath(){if(!this._localCodePath)return null;const e=dn.parse(this._localCodePath),t=this.action===K.FTP_INSTRUMENTS_ACTIONS.remove?".no-fsp":".protected";return dn.resolve(dn.join(e.dir,e.name+t+e.ext))}get runtime(){return this._functionConfig&&this._functionConfig.Configuration&&this._functionConfig.Configuration.Runtime}get handler(){return this._functionConfig&&this._functionConfig.Configuration&&this._functionConfig.Configuration.Handler}get region(){return this._region}get arnObj(){return this._arn}get functionName(){return this._functionConfig&&this._functionConfig.Configuration&&this._functionConfig.Configuration.FunctionName}parseArn(e){this._arn=new ln(e),this._region=this._arn.region,this._functionName=this._arn.functionName,this._awsAccountId=this._arn.awsAccountId}fetchFunctionConfig(){return an.getFunctionConfig(this._region,this._functionName).then(e=>{this._functionConfig=e,void 0===this._arn&&(this._functionArn=this._functionConfig.Configuration.FunctionArn,this.parseArn(this._functionArn))}).catch((function(e){throw"Missing region in config"===e.message?new I(`Failed to get function.\nAWS Region not found. You can specify a region using AWS_REGION environment variable.\n${e}`):new I(`Failed to get function: ${e}`)}))}updateFunctionConfig(){const e={};return this._newEnvVar&&(e.Environment=this._newEnvVar),this._newHandler&&(e.Handler=this._newHandler),this._newLayers&&(e.Layers=this._newLayers),an.updateFunctionConfig(this._region,this._functionName,e).then(e=>e).catch((function(e){throw new I(`Failed to update Function Config: ${e}`)}))}updateFunctionCodeIfNeeded(){return this.needCodeChange()?an.updateFunctionCode(this._region,this._functionName,this.localProtectedCodePath).then(e=>e).catch((function(e){if(hn.includes(e,"RequestEntityTooLargeException"))throw new FspUpdateCodeEntityTooLargeError("Failed to update Function Code",e);throw new I(`Failed to update Function Code:  ${e}`)})):null}needCodeChange(){if(void 0===this.runtime)throw new I(`Failed to get function runtime: ${this._functionConfig}`);return this._protegoPlugin.debug("Function runtime:",this.runtime),this._protegoPlugin.isCodeInstrumentsRuntime(this.runtime)}getCodeIfNeeded(e){if(this.needCodeChange()){const t=hn.get(this._functionConfig,"Configuration.CodeSize",0),i=e===K.FTP_INSTRUMENTS_ACTIONS.add?K.MAX_ADD_CODE_SIZE:K.MAX_REMOVE_SIZE;if(t>i)throw new FspCodeSizeIsTooLargeError(`Lambda code size must be smaller than ${i} Bytes`);const n=this._functionConfig&&this._functionConfig.Code&&this._functionConfig.Code.Location;if(void 0===n)throw new I(`Failed to get function code location: ${this._functionConfig}`);return function(e,t){return new Promise((i,n)=>{const r=Xi.join(K.ROOT_FOLDER,"tmp-originalFunction");Qi.existsSync(r)||Qi.mkdirSync(r);const o=Xi.join(r,t+".zip");!function(e,t,i){new Promise((n,r)=>{Zi(e).pipe(Qi.createWriteStream(t)).on("close",(function(){i()}))})}(e,o,(function(e,t){i(o)}))})}(n,this._functionConfig.Configuration.FunctionName).then(e=>{this._localCodePath=e}).catch((function(e){throw new I(`Failed to download function code: ${e}`)}))}}removeNodeOptions(e){const t=e.NODE_OPTIONS;return t&&("--require @protego/protego-node-agent"===t.replace(/\s+/g," ")?(this._protegoPlugin.debug("Only Protego node options exist and will be removed"),delete e.NODE_OPTIONS):(this._protegoPlugin.debug("node options exist, remove only Protego"),e.NODE_OPTIONS=t.replace("--require @protego/protego-node-agent",""))),e}calcFunctionNewConfig(e,t){if(this._newProtegoEnvVar=this._protegoPlugin.getUniqueFunctionId(),t===K.FTP_INSTRUMENTS_ACTIONS.add&&this._protegoPlugin.isLayerRuntime(this.runtime)){const t=this._protegoPlugin.getFSPLayer(this.functionName,this.runtime,this.region);e.layer=t.layer,t.environment&&hn.extend(this._newProtegoEnvVar,t.environment)}this._protegoPlugin.debug("calcFunctionNewConfig res: ",e);let i=this._functionConfig&&this._functionConfig.Configuration&&this._functionConfig.Configuration.Environment&&this._functionConfig.Configuration.Environment.Variables||{};if(t===K.FTP_INSTRUMENTS_ACTIONS.remove?(delete i.PROTEGO_FSP_CUSTOMER_ACCOUNT_ID,"nodejs10.x"!==this.runtime&&"nodejs12.x"!==this.runtime||(i=this.removeNodeOptions(i)),this._newEnvVar={Variables:i}):this._newEnvVar={Variables:this._protegoPlugin.mergeProtegoEnv(i||{},this._newProtegoEnvVar)},this._newHandler=e.handler,this._newLayerArn=e.layer,t===K.FTP_INSTRUMENTS_ACTIONS.add&&e.layer){let t=this._functionConfig&&this._functionConfig.Configuration&&this._functionConfig.Configuration.Layers||[];t=hn.map(t,e=>hn.isEmpty(e.Arn)?e:e.Arn),this._newLayers=hn.filter(t,e=>-1===JSON.stringify(e).indexOf("cloudguard-fsp-")),this._newLayers.push(e.layer)}else if(t===K.FTP_INSTRUMENTS_ACTIONS.remove){let e=this._functionConfig&&this._functionConfig.Configuration&&this._functionConfig.Configuration.Layers||[];e=hn.map(e,e=>hn.isEmpty(e.Arn)?e:e.Arn),e=hn.filter(e,e=>-1===JSON.stringify(e).indexOf("cloudguard-fsp-")),e=hn.filter(e,e=>-1===JSON.stringify(e).indexOf("protego-fsp-")),this._newLayers=e}else this._newLayers=void 0}validateFSPFunc(e){return e===K.FTP_INSTRUMENTS_ACTIONS.add?this._protegoPlugin.validateFsp(this.functionArn,this.runtime,this.handler,this.localProtectedCodePath,!0):e===K.FTP_INSTRUMENTS_ACTIONS.remove&&this._protegoPlugin.validateFspRemoved(this.functionArn,this.runtime,this.handler,this.localProtectedCodePath,!0)}printSummary(e){const t=this._protegoPlugin.protegoFspBundleDescriptor.version,i=t?` (v${t})`:"",n=this.action===K.FTP_INSTRUMENTS_ACTIONS.remove?gn.magenta:gn.green;e===K.FTP_INSTRUMENTS_ACTIONS.add?this._protegoPlugin.log(n.underline(`Protego FSP${i} Instrumentation Succeeded ✓`)):e===K.FTP_INSTRUMENTS_ACTIONS.remove&&this._protegoPlugin.log(n.underline("FSP removed successfully ✓")),this._protegoPlugin.log("  - function ARN  : ",this._functionArn),this._protegoPlugin.log("  - runtime       : ",this.runtime),this._newHandler&&this._protegoPlugin.log("  - handler       : ",this._newHandler),this._newLayerArn&&this._protegoPlugin.log("  - layer         : ",this._newLayerArn),e===K.FTP_INSTRUMENTS_ACTIONS.add&&this._protegoPlugin.log("  - environment   : ",JSON.stringify(this._newProtegoEnvVar))}printFailSummary(e,t){fn.printFail(e,this._protegoPlugin,this._functionArn,t)}static printFail(e,t,i,n){const r=n===K.FTP_INSTRUMENTS_ACTIONS.remove?"Removal":"Instrumentation";t.log(gn.red.underline(`Protego FSP ${r} - Failed!`)),t.log("  - function ARN  : ",i),t.log("  - error         : ","string"==typeof e?e:e.message)}}const _n=require("path"),mn=require("lodash"),Pn=require("chalk"),{yamlParse:En,yamlDump:Fn}=require("yaml-cfn"),vn=require("js-yaml"),Sn=require("fs");class yn{constructor(e,t,i,n,r,o,s){this._templatePath=e,this._protegoPlugin=t,this._region=i,this._awsAccountId=n,this._output=r,this._dryRun=o,this._modifiedTemplate=!1,this._stats={succeeded:[],failures:[],skipped:[]},this._functionsList=s}get templatePath(){return this._templatePath}get templateOutputPath(){return this._templateOutputPath}get templateData(){return this._templateData}get region(){return this._region}get awsAccountId(){return this._awsAccountId}loadTemplateData(e){if(mn.isEmpty(e)){if(!Sn.existsSync(this._templatePath))throw new I(`CF/Sam template file not found: ${this._templatePath}`);try{var t=Sn.readFileSync(this._templatePath,"utf8")}catch(e){throw new I(`CF/Sam template file read error: ${e}`)}try{this._templateData=JSON.parse(t),this._templateFormat="json"}catch(e){try{this._templateData=vn.safeLoad(t,{schema:vn.JSON_SCHEMA}),this._templateFormat="yaml"}catch(e){this._protegoPlugin.debug(e);try{this._templateData=En(t),this._templateFormat="shortYaml"}catch(e){throw new I(`CF/Sam template file parsing error: ${e}`)}}}this._protegoPlugin.debug("templateFormat",this._templateFormat),this._protegoPlugin.debug("_templateData",this._templateData)}else this._templateData=e}addFspToFunctions(e){mn.forEach(this._templateData.Resources||[],(t,i)=>{if(("AWS::Lambda::Function"===t.Type||"AWS::Serverless::Function"===t.Type)&&(mn.isEmpty(this._functionsList)||mn.isArray(this._functionsList)&&this._functionsList.includes(i))){const r=t.Properties.Runtime,o=mn.isString(t.Properties.FunctionName)?t.Properties.FunctionName:i;if(!Fe.includes(r)||Se.includes(r))this._stats&&this._stats.skipped&&mn.isArray(this._stats.skipped)&&this._stats.skipped.push(o);else{this._modifiedTemplate=!0;var n=new fn(i,this._protegoPlugin,this._region,{Configuration:t.Properties}||{},e);n.calcFunctionNewConfig({},e),n._newEnvVar&&(this._templateData.Resources[i].Properties.Environment=n._newEnvVar),n._newHandler&&(this._templateData.Resources[i].Properties.Handler=n._newHandler),n._newLayers&&(this._templateData.Resources[i].Properties.Layers=n._newLayers),this._stats&&this._stats.succeeded&&mn.isArray(this._stats.succeeded)&&this._stats.succeeded.push(o)}}})}dumpProtectedTemplate(e){if(this._modifiedTemplate&&!this._dryRun){if(mn.isEmpty(this._output)){const t=_n.parse(this._templatePath),i=e===K.FTP_INSTRUMENTS_ACTIONS.remove?".no-fsp":".protected";this._templateOutputPath=_n.resolve(_n.join(t.dir,t.name+i+t.ext))}else this._templateOutputPath=_n.resolve(this._output);var t;if("json"===this._templateFormat)t=JSON.stringify(this._templateData,null,2);else if("yaml"===this._templateFormat)t=vn.safeDump(this._templateData,{});else{if("shortYaml"!==this._templateFormat)throw new I(`Unexpected error. Unknown template format: ${this._templateFormat}`);t=Fn(this._templateData)}Sn.writeFileSync(this._templateOutputPath,t,"utf-8"),this._protegoPlugin.log(Pn.cyan("\nOutput template: "+this._templateOutputPath))}else this._protegoPlugin.log(Pn.cyan("\nCloudFormation/Sam template was not changed."))}printFailSummary(e,t){this._protegoPlugin.trace("CloudFormation / Sam template modification Failed",JSON.stringify(e,null,2)),this._protegoPlugin.log(Pn.red.underline("Protego FSP CloudFormation / Sam template modification Failed !")),this._protegoPlugin.log("  - template ",this._templatePath),this._protegoPlugin.log("  - error         : ","string"==typeof e?e:e.message)}}const An=require("aws-sdk");class Tn{static getProviderId(e){return e.provider===K.PROVIDER_AZURE?new Promise(t=>{t(e.subscriptionId)}):(new An.STS).getCallerIdentity().promise().then(e=>e.Account)}}const On=require("path"),Cn=require("fs"),Rn=require("lodash"),bn=require("chalk"),wn=require("js-yaml");class In{constructor(e,t,i,n=!1){this.protegoPlugin=new Ni(e,{debug:t.verbose,quiet:t.quiet,provider:t.provider},"cloudguard-cli",!0,!1),this.options=t,this.action=i,this.logger=e,this.fspHelper=Kt.fspHelper(t.provider,e,t),Rn.bindAll(this),Rn.bindAll(this,["addFspToASingleFunction","showStatsResults","addFspToFunctionsList","addOrRemoveFSPInstrumentation"])}init(){const{protegoPlugin:e,options:t}=this;let i={protego:{protegoAccessToken:t.protegoAccessToken,fsp:{Enabled:!0,FSPVersion:"latest"!==t.fspVersion?t.fspVersion:null},baseUrl:t.baseUrl,provider:t.provider}};return i.protego[`${K.PLUGIN_TYPE_KEY}`]=H(this.logger),Promise.resolve().then(()=>e.configure(i)).then(()=>Tn.getProviderId(t)).then(e=>this.protegoPlugin.setAccountId(e)).then(()=>e.loadDependencies()).catch(e=>{if(e instanceof ProtegoBaseErrorException)throw e;throw new InitializationFailedError(null,e)})}addOrRemoveFSPInstrumentation(e,t,i,n,r){const{protegoPlugin:o,action:s}=this;if(s===K.FTP_INSTRUMENTS_ACTIONS.add)return o.instrumentLambdaFunction(e,t,i,n,r);if(this.action===K.FTP_INSTRUMENTS_ACTIONS.remove)return o.removeFSP(e,t,i,n,r);throw new FspUnsupportedActionError(`Unsupported FSP Action: ${s}`)}wrapFsp(){const{protegoPlugin:e,options:t,action:i}=this,n=t.input&&On.resolve(t.input)||"";return Promise.resolve().then(()=>{this.fspHelper.isCodeInstrumentsRuntime(t.runtime)&&!Cn.existsSync(n)&&e.error(`Input artifact file (${n}) does not exist`)}).then(()=>{if(this.fspHelper.isCodeInstrumentsRuntime(t.runtime))if(Rn.isEmpty(t.output)){const e=On.parse(t.input),n=i===K.FTP_INSTRUMENTS_ACTIONS.remove?".no-fsp":".protected";t.output=On.resolve(On.join(e.dir,e.name+n+e.ext))}else t.output=On.resolve(t.output)}).then(()=>this.fspHelper.isCodeInstrumentsRuntime(t.runtime)?this.addOrRemoveFSPInstrumentation(t.input,t.runtime,t.handler,n,t.output):{}).then(i=>{if(this.action===K.FTP_INSTRUMENTS_ACTIONS.remove)return e.log(bn.magenta.underline(`* Removing protection from (${n}) Done ✓`)),t.provider===K.PROVIDER_AZURE?void e.log(" Please deploy the function app to remove FSP"):void(this.fspHelper.isCodeInstrumentsRuntime(t.runtime)&&(e.log("  - input artifact  : ",On.relative(process.cwd(),n)),e.log("  - output artifact : ",On.relative(process.cwd(),t.output))));const r=e.getUniqueFunctionId(),o=e.protegoFspBundleDescriptor&&e.protegoFspBundleDescriptor.version,s=o?` (v${o})`:"";if(e.debug("Instrumentation done",JSON.stringify(i,null,2)),this.fspHelper.isCodeInstrumentsRuntime(t.runtime)?(e.log(bn.green.underline(`Protego FSP${s} Instrumentation Done ✓`)),e.log("  - input artifact  : ",On.relative(process.cwd(),n)),e.log("  - output artifact : ",On.relative(process.cwd(),i.artifact||t.output)),this.fspHelper.isHandlerRequired(t.runtime)&&e.log("  - handler         : ",i.handler||t.handler)):e.log(bn.green.underline(`Protego FSP${s} Instrumentation Info:`)),t.provider===K.PROVIDER_AZURE)e.log(" Please deploy the function app to enable FSP");else if(e.log(" Please add this configuration to your Lambda function"),e.log("  - runtime         : ",t.runtime),e.isLayerRuntime(t.runtime)){const i=e.getFSPLayer(`layer_for_${t.runtime}`,t.runtime,t.region);this.action===K.FTP_INSTRUMENTS_ACTIONS.add&&(e.log("  - layer           : ",i.layer),e.log("  - environment     : ",JSON.stringify(Object.assign({},r,{},i.environment||{}))))}else e.log("  - environment     : ",JSON.stringify(r));t.quiet&&e.log(r)}).catch(e=>{if(e instanceof ProtegoBaseErrorException)throw e;throw new FspInstrumentationError("Fsp Instrumentation Error (wrapFsp)",e)})}addFspToASingleFunction(e,t,i,n=!1){const{protegoPlugin:r}=this;let o;this.action===K.FTP_INSTRUMENTS_ACTIONS.add?r.debug("Adding FSP to function ",e):this.action===K.FTP_INSTRUMENTS_ACTIONS.remove&&r.debug("Removing FSP from function ",e);try{o=new fn(e,r,i,void 0,this.action)}catch(i){if(fn.printFail(i,r,e,this.action),t&&t.failures&&Rn.isArray(t.failures)&&t.failures.push(e),n){if(i instanceof ProtegoBaseErrorException)return i;throw new FspInstrumentationError(null,i)}return Promise.resolve()}return Promise.resolve().then(()=>o.fetchFunctionConfig()).then(()=>{if(!this.fspHelper.isSupportedRuntime(o.runtime))throw new I(`Unsupported runtime ${o.runtime}`)}).then(()=>o.getCodeIfNeeded(this.action)).then(()=>o.needCodeChange()?this.addOrRemoveFSPInstrumentation(o.functionName,o.runtime,o.handler,o.localCodePath,o.localProtectedCodePath):{}).then(t=>{if(o.needCodeChange()&&!o.validateFSPFunc(this.action))throw new Error(`Failed to validate FSP: ${e}`);return t}).then(e=>o.calcFunctionNewConfig(e,this.action)).then(()=>o.updateFunctionCodeIfNeeded()).then(()=>o.updateFunctionConfig()).then(e=>(o.printSummary(this.action),t&&t.succeeded&&Rn.isArray(t.succeeded)?(t.succeeded.push(o.functionArn),{FunctionArn:o.functionArn,LastModified:Rn.get(e,"LastModified")}):null)).catch(e=>{if(t&&t.failures&&Rn.isArray(t.failures)&&t.failures.push(o.functionArn),o.printFailSummary(e,this.action),n){if(e instanceof ProtegoBaseErrorException)throw e;throw new FspInstrumentationError("Fsp Instrumentation Error (addFspToASingleFunction)",e)}})}addFspToFunction(){const{protegoPlugin:e,options:t}=this,i=t.functionArn;let n={succeeded:[],failures:[],skipped:[]};return t.dryRun?(n.skipped=[i],void this.showStatsResults(n)):Promise.resolve().then(()=>this.addFspToASingleFunction(i,n,void 0,!0)).then(t=>{if(1!==n.succeeded.length)throw new FspInstrumentationError(`Failed to instrument: ${i}`);return K.IN_LAMBDA_MODE?t:e.invokeRemoteScanAccount().then(()=>t)}).catch(e=>{if(e instanceof ProtegoBaseErrorException)throw e;throw new FspInstrumentationError(`Failed to instrument: ${i}`,e)})}addFspToFunctionsList(e,t){const{protegoPlugin:i,options:n,addFspToASingleFunction:r,showStatsResults:o}=this;if(!Rn.isArray(e))throw new Error("Invalid Functions Arns file format. expected List. ");this.action?i.debug("Add FSP to functions list ",e):i.debug("Removing FSP from functions list ",e);let s={succeeded:[],failures:[],skipped:[]};if(n.dryRun)return s.skipped=e,void this.showStatsResults(s);let a=Rn.map(e,e=>r(e,s,t));return Promise.all(a).then(()=>{}).then(()=>s.succeeded.length>0?i.invokeRemoteScanAccount():{}).then(()=>o(s)).catch(e=>{if(e instanceof ProtegoBaseErrorException)throw e;throw new FspInstrumentationError("Fsp Instrumentation Error (addFspToFunction)",e)})}getFunctionsList(){const{protegoPlugin:e,options:t}=this;if(void 0===t.arnsFilePath)return;const i=On.join(process.cwd(),t.arnsFilePath);if(e.log("Fetching functions list from file",i),!Cn.existsSync(i))throw new Error("Functions Arns file not found. ("+i+")");try{return wn.safeLoad(Cn.readFileSync(i,"utf8"))}catch(e){throw new ParsingError("Functions Arns file ("+t.arnsFilePath+") parsing error: "+("string"==typeof e?e:e.message))}}addFspToFunctionsListFromFile(){const{protegoPlugin:e,options:t}=this,i=this.getFunctionsList(e,t);return this.addFspToFunctionsList(i)}addFspToFunctionsListFromCfStack(){const{protegoPlugin:e,options:t,addFspToFunctionsList:i}=this;e.log("Fetching functions list from CF stack",t.cfArn);let n=t.cfArn,r=void 0;if(cn.isArn(t.cfArn)){const e=new pn(t.cfArn);n=e.stackName,r=e.region}return Promise.resolve().then(()=>an.getFunctionsFromCfStack(r,n)).then(e=>i(e,r)).catch((function(e){throw"Missing region in config"===e.message?new CFTemplateError(`Failed to get CF Stack.\nAWS Region not found. You can specify a region using AWS_REGION environment variable.\n${e}`):new CFTemplateError(`Failed to get CF Stack: ${e}`)}))}addFspCfTemplate(){const{protegoPlugin:e,options:t,showStatsResults:i}=this;this.action===K.FTP_INSTRUMENTS_ACTIONS.add&&e.log("Adding FSP to functions in CF template",t.cfTemplate),this.action===K.FTP_INSTRUMENTS_ACTIONS.remove&&e.log("Removing FSP from functions in CF template",t.cfTemplate);const n=void 0!==t.functionArn?[t.functionArn]:this.getFunctionsList();Rn.isEmpty(n)||e.log("Using function list: ",n);const r=new yn(t.cfTemplate,e,t.region,t.awsAccountId,t.output,t.dryRun,n);return Promise.resolve().then(()=>{r.loadTemplateData(),r.addFspToFunctions(this.action),r.dumpProtectedTemplate(this.action),i(r._stats)}).catch(e=>{r.printFailSummary(e,this.action)})}showStatsResults(e){const{protegoPlugin:t}=this;let i="\n";const n=t.protegoFspBundleDescriptor&&t.protegoFspBundleDescriptor.version,r=n?` (${n})`:"";i+=`${bn.yellow.underline.bold(`Protego - FSP${r} Summary:`)}\n`;const o=this.action===K.FTP_INSTRUMENTS_ACTIONS.remove?bn.magenta:bn.green;Rn.isEmpty(e.succeeded)&&Rn.isEmpty(e.failures)&&Rn.isEmpty(e.skipped)?i+=`\n  ${bn.magenta.bold("No Functions Found.")}\n`:(!Rn.isEmpty(e.succeeded)&&Rn.isArray(e.succeeded)&&this.action===K.FTP_INSTRUMENTS_ACTIONS.add&&(i+=`\n  ${o.underline.bold(`Protected Functions (${e.succeeded.length}) :`)}\n`,e.succeeded.forEach(e=>{i+=`    ${o("✓")} ${e}:  ${o("Protected")} \n`})),!Rn.isEmpty(e.succeeded)&&Rn.isArray(e.succeeded)&&this.action===K.FTP_INSTRUMENTS_ACTIONS.remove&&(i+=`\n  ${o.underline.bold(`Removed Protection from Functions (${e.succeeded.length}) :`)}\n`,e.succeeded.forEach(e=>{i+=`    ${bn.cyan("✓")} ${e}:  ${bn.cyan("Not Protected")} \n`})),!Rn.isEmpty(e.skipped)&&Rn.isArray(e.skipped)&&(i+=`\n  ${bn.cyan.underline.bold(`Skipped Functions (${e.skipped.length}) :`)}\n`,e.skipped.forEach(e=>i+=`    ${bn.cyan("*")} ${e}:  ${bn.cyan("Skipped - Not Protected")}\n`)),!Rn.isEmpty(e.failures)&&Rn.isArray(e.failures)&&(i+=`\n  ${bn.red.underline.bold(`Failures (${e.failures.length}) :`)}\n`,e.failures.forEach(e=>i+=`    ${bn.red("!")} ${e}:  ${bn.red("Not Protected")}\n`))),t.log(i)}}const Nn=require("upath"),Dn=require("path"),Ln=require("lodash"),kn={protegoPlugin:null,runProact(e,t){this.protegoPlugin=new Ni(e,{debug:t.verbose,quiet:t.quiet},"cloudguard-cli",!1,!0);let i={protego:{protegoAccessToken:t.protegoAccessToken,baseUrl:t.baseUrl,proact:{Enabled:!0,proactVersion:"latest"!==t.ProactVersion?t.ProactVersion:null,dockerImage:t.dockerImage},containerCmd:q(t,e),containerOptions:M(e),containerUser:G(t,e),dockerArgs:B(t,e)}};return i.protego[`${K.PLUGIN_TYPE_KEY}`]=H(e),Promise.resolve().then(()=>this.protegoPlugin.configure(i)).then(()=>Tn.getProviderId(t)).then(e=>this.protegoPlugin.setAccountId(e)).then(()=>this.protegoPlugin.loadDependencies()).then(()=>this.protegoPlugin.runProactScanner(process.cwd(),null,this.getCliArgs(t))).catch(e=>{if(e instanceof I&&"Invalid Configuration"===e.message)return this.protegoPlugin.error("Invalid Configuration, show --help");this.protegoPlugin.error(e)})},getCliArgs(e){const t=[];return this.protegoPlugin.protegoConfig.protegoAccessToken&&t.push("--access_token",this.protegoPlugin.protegoConfig.protegoAccessToken),e.verbose&&t.push("-v"),e.storeReport&&t.push("-s"),e.quiet&&t.push("-q"),e.output&&(t.push("-o"),t.push(Nn.toUnix(e.output))),e.jsonOutput&&t.push("-j"),e.input&&(t.push("-p"),t.push(Dn.relative(process.cwd(),Nn.toUnix(e.input)))),e.cloudformationTemplate&&(t.push("-C"),t.push(Dn.relative(process.cwd(),Nn.toUnix(e.cloudformationTemplate)))),e.samTemplate&&(t.push("-m"),t.push(Dn.relative(process.cwd(),Nn.toUnix(e.samTemplate)))),e.parallel&&(t.push("--parallel"),t.push(e.parallel)),Ln.isEmpty(e.function)||(t.push("--function"),t.push(e.function.join(","))),Ln.isEmpty(e.tag)||(t.push("--tags"),t.push(e.tag.join(","))),Ln.isEmpty(e.timeProfiling)||t.push("--time_profiling"),this.protegoPlugin.debug("options:",JSON.stringify(e,null,4)),t}},Un=(require("lodash"),require("chalk")),$n=Object.freeze({cfTemplate:"cfTemplate",cfArn:"cfArn",functionArn:"functionArn",arnsFilePath:"arnsFilePath",default:"default"}),jn=[$n.functionArn,$n.arnsFilePath];class xn{constructor(e){this.getVersion=e}toString(){return this.getVersion()}}void 0===console.debug&&(console.debug=console.log),Object.defineProperty(Yi,"name",{writable:!0}),Yi.name="ServerlessPluginProtegoFSP",module.exports.ServerlessPluginProtegoFSP=Yi,module.exports.ProtegoCliTool=function(e=console){let t=require("commander"),i=require("lodash");e.error||(e.error=e.log),e.debug||(e.debug=e.log);const n=new Z(e,{},"cloudguard-cli");t.version(new xn(r)),t.on("command:*",(function(){o()})),t.command("fsp").arguments("[action]").usage("[action] [options]").description("FSP protection can be added or removed using actions\n\nAction:\n add (default)\n remove").option("-p, --provider <cloud provider>","name of the cloud provider [aws(default)/azure]","aws").option(Un.green("\nProvider: AWS")).option("-p, --provider aws").option("-i, --input <path>","path to input code package file (zip/jar)").option("-n, --function-arn <arn>","Function arn (or name) to add FSP (can be used also with -C)").option("-N, --arns-file-path <file-path>","file (json/yaml) with Functions arns (or names) list to add FSP (can be used also with -C)").option("-c, --cf-arn <arn>","Add FSP to all the functions in the given stack ARN").option("-C, --cf-template <path>","CloudFormation or SAM - Add FSP to all the functions in the given template (the functions can be selected with -N [functions_list_file_path] OR -n [single_function_logical_name])").option("-H, --handler <handler>",`handler path as configured in AWS Lambda, required for: [${Se.join(", ")}]`).option("-r, --runtime <runtime>",`Environment runtime [${Ee.join(", ")}]`).option("-R, --region <region>","AWS Region").option("-o, --output [path]","(optional) path to protected output package file (zip/jar/template)").option("--dry-run","Only print the functions list. (Works with -N, -C or -c)").option(Un.green("\nProvider: Azure")).option("-p, --provider azure").option("-i, --input <path>","path to input Azure Function App folder").option("-s, --subscription-id <azure subscription id>","Subscription id of an Azure account",process.env.AZURE_SUBSCRIPTION_ID).option("-r, --runtime <runtime>","Environment runtime [python, node]").option(Un.green("\nCommon Options")).option("-t, --protego-access-token <token>","Protego Token").option("-b --base-url <url>","(optional) Base URL for the backend: [https://api.dome9.com/v2 (default), https://api.eu1.dome9.com/v2, , https://api.ca1.dome9.com/v2, https://api.ap1.dome9.com/v2, https://api.ap2.dome9.com/v2, https://api.ap3.dome9.com/v2, https://api.ap4.dome9.com/v2, https://api.ap5.dome9.com/v2]").option("-f, --fsp-version <version>","(optional) FSP Version","latest").option("-q, --quiet","(optional) quiet mode: output only the json output",!1).option("-v, --verbose","(optional) verbose debug logs",!1).action((function(t=K.FTP_INSTRUMENTS_ACTIONS.add,r={}){K.FTP_INSTRUMENTS_ACTIONS.hasOwnProperty(t)||o(),r&&r.opts||o();const s=r.opts(),u=function(e){const t=i.map($n),n=i.filter(t,t=>void 0!==e[t]);if(n.length>1){if(2===n.length&&n.includes($n.cfTemplate)&&1===i.intersection(n,jn).length)return $n.cfTemplate;throw`Invalid usages of theses flags together: ${n}`}return 0===n.length?$n.default:n[0]}(s);n.debug("fspAction - fspType:",u),function(e,t,r){const o=[];switch(t){case $n.cfArn:case $n.functionArn:case $n.arnsFilePath:break;case $n.cfTemplate:o.push("region");break;case $n.default:default:const t=Kt.fspHelper(r.provider,n,r);if(r.runtime&&!t.isSupportedRuntime(r.runtime))throw`Unsupported runtime ${r.runtime}\nMust be one of [${t.supportedRuntimes.join(", ")}]`;if(e===K.FTP_INSTRUMENTS_ACTIONS.remove)if(r.provider===K.PROVIDER_AZURE){if(r.runtime&&!t.isSupportedRuntime(r.runtime))throw`Unsupported runtime ${r.runtime} for REMOVE action \n  - Must be one of [${t.supportedRuntimes.join(", ")}]`}else if(r.runtime&&ve.includes(r.runtime))throw`Unsupported runtime ${r.runtime} for REMOVE action \n  - Must be one of [${Se.join(", ")}]`;if(r.provider===K.PROVIDER_AZURE&&!r.subscriptionId)throw"Subscription id is mandatory for applying FSP to Azure Function App.\n\nPlease use one of the two options to provide subscription id:\n  - use CLI option -s/--subscription-id\n  - set Azure subscription id to an environment variable: AZURE_SUBSCRIPTION_ID";o.push("runtime"),t.isRegionRequired(r.runtime)&&o.push("region"),t.isCodeInstrumentsRuntime(r.runtime)&&o.push("input"),t.isHandlerRequired(r.runtime)&&o.push("handler")}const s=i.filter(o,e=>i.isUndefined(r[e]));if(s.length>0)throw n.debug("required",JSON.stringify(o)),n.debug("missingFlags",JSON.stringify(s)),`Missing options [${i.map(s,e=>"--"+i.kebabCase(e)).join(", ")}]\nSee --help`}(t,u,s);const c=new In(e,s,t);return c.init().then(()=>{switch(u){case $n.cfTemplate:return c.addFspCfTemplate();case $n.cfArn:return c.addFspToFunctionsListFromCfStack();case $n.functionArn:return c.addFspToFunction();case $n.arnsFilePath:return c.addFspToFunctionsListFromFile();case $n.default:default:return c.wrapFsp()}}).then(t=>{t&&K.IN_LAMBDA_MODE&&e.log(JSON.stringify(t))}).then(()=>a(null)).catch(e=>a(e))})),t.command("proact").description("scan Lambda functions").option("-i, --input [path]","path to protego.yml input file","protego.yml").option("-C, --cloudformation-template [path]","path to cloudformation template file (when running without protego.yml)").option("-m, --sam-template [path]","path to sam template file (when running without protego.yml)").option("-t, --protego-access-token <token>","Protego Token").option("-b --base-url <url>","(optional) Base URL for the backend: [https://api.dome9.com/v2 (default), https://api.eu1.dome9.com/v2, , https://api.ca1.dome9.com/v2, https://api.ap1.dome9.com/v2, https://api.ap2.dome9.com/v2, https://api.ap3.dome9.com/v2, https://api.ap4.dome9.com/v2, https://api.ap5.dome9.com/v2]").option("-o, --output [path]","(optional) folder path of reports outputs","").option("-j, --json-output","(optional) generates output in json format instead of yaml",!1).option("--proact-version <version>","(optional) Proact Version","latest").option("--tags [tag]","(optional) tags key=value,key=value",u,!1).option("-f, --function [function name]","(optional) function/s e.g func1, func2",u,[]).option("-s, --store-report","(optional) store report history on protego backend",!1).option("-d, --docker-image <image>","(optional) The docker image:tag to be used for proact scan","protego/protego-runtime:latest").option("-l, --parallel [num]","(experimental) number of parallel functions to scan").option("--time-profiling","(experimental) add time profiling indication to the output").option("--no-docker","(experimental) run the proact tool without requiring a docker environment").option("-q, --quiet","(optional) quiet mode: output only the json output",!1).option("-v, --verbose","(optional) verbose debug logs",!1).action((function(t){t&&t.opts||o();const i=t.opts();return kn.runProact(e,i).catch(t=>{e.log("Exit with Error:\n","string"==typeof t?t:t.message),t.code&&process.exit(t.code),process.exit(255)})}));try{t.parse(process.argv)}catch(e){a(e)}function r(){try{return new Ni(e,{},"cloudguard-cli",!0,!0).printVersions(!0)}catch(e){return n.debug("Unexpected Error",e&&e.toString()),require("../package").version}}function o(){e.error("Invalid command: %s\nSee --help for a list of available commands.",t.args.join(" ")),process.exit(1)}function s(){if(!W(H(n)))return;const t=J("protego fsp/proact","cloudguard fsp/proact","command");e.error(t)}function a(t){if(function(){try{!function(){const e=Xi.join(K.ROOT_FOLDER,"tmp-originalFunction");en.removeSync(e)}()}catch(e){n.debug("Failed to cleanup input function directory: "+e)}}(),t){const o=i.isError(t)?t:new UnexpectedError(t);let a="\n============== Error ==============\n\n  ";try{a+=o.toString()}catch(t){n.debug(t)}if(a+="\n",a+=r(),e.error(a),n.debug(o.stack),K.IN_LAMBDA_MODE){const t={ErrorType:o.name,Message:o.toString(),Id:o instanceof ProtegoBaseErrorException?o.id:100,Stack:o.stack};e.error(JSON.stringify(t))}s(),o instanceof ProtegoBaseErrorException&&process.exit(o.id),process.exit(100)}s()}function u(e,t){return t.push(e),t}t.args.length||t.help()};
